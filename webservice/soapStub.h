/* soapStub.h
   Generated by gSOAP 2.8.111 for .\Service1.asmx.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>
#define SOAP_NAMESPACE_OF_ns1	"http://Fantasy/WebServiceDemo/"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 208111
# error "GSOAP VERSION 208111 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

struct ns1__AddNumbersResponse;	/* .\Service1.asmx.h:357 */
struct ns1__AddNumbers;	/* .\Service1.asmx.h:357 */
struct ns1__clearLinkResponse;	/* .\Service1.asmx.h:427 */
struct ns1__clearLink;	/* .\Service1.asmx.h:427 */
struct ns1__showExistLinkResponse;	/* .\Service1.asmx.h:494 */
struct ns1__showExistLink;	/* .\Service1.asmx.h:494 */
struct ns1__TestLinkSqlserverResponse;	/* .\Service1.asmx.h:564 */
struct ns1__TestLinkSqlserver;	/* .\Service1.asmx.h:564 */
struct ns1__executeSqlResponse;	/* .\Service1.asmx.h:637 */
struct ns1__executeSql;	/* .\Service1.asmx.h:637 */
struct ns1__executeSql_USCOREbackEncordResponse;	/* .\Service1.asmx.h:710 */
struct ns1__executeSql_USCOREbackEncord;	/* .\Service1.asmx.h:710 */
struct ns1__executeSql_USCOREencodeResponse;	/* .\Service1.asmx.h:783 */
struct ns1__executeSql_USCOREencode;	/* .\Service1.asmx.h:783 */
struct ns1__insertXmlResponse;	/* .\Service1.asmx.h:859 */
struct ns1__insertXml;	/* .\Service1.asmx.h:859 */
struct ns1__executeStorageProcessResponse;	/* .\Service1.asmx.h:935 */
struct ns1__executeStorageProcess;	/* .\Service1.asmx.h:935 */
struct ns1__AddFileToSqlResponse;	/* .\Service1.asmx.h:1023 */
struct ns1__AddFileToSql;	/* .\Service1.asmx.h:1023 */
struct ns1__AddNumbers_Response;	/* .\Service1.asmx.h:1096 */
struct ns1__AddNumbers_;	/* .\Service1.asmx.h:1096 */
struct ns1__clearLink_Response;	/* .\Service1.asmx.h:1166 */
struct ns1__clearLink_;	/* .\Service1.asmx.h:1166 */
struct ns1__showExistLink_Response;	/* .\Service1.asmx.h:1233 */
struct ns1__showExistLink_;	/* .\Service1.asmx.h:1233 */
struct ns1__TestLinkSqlserver_Response;	/* .\Service1.asmx.h:1303 */
struct ns1__TestLinkSqlserver_;	/* .\Service1.asmx.h:1303 */
struct ns1__executeSql_Response;	/* .\Service1.asmx.h:1376 */
struct ns1__executeSql_;	/* .\Service1.asmx.h:1376 */
struct ns1__executeSql_USCOREbackEncord_Response;	/* .\Service1.asmx.h:1449 */
struct ns1__executeSql_USCOREbackEncord_;	/* .\Service1.asmx.h:1449 */
struct ns1__executeSql_USCOREencode_Response;	/* .\Service1.asmx.h:1522 */
struct ns1__executeSql_USCOREencode_;	/* .\Service1.asmx.h:1522 */
struct ns1__insertXml_Response;	/* .\Service1.asmx.h:1598 */
struct ns1__insertXml_;	/* .\Service1.asmx.h:1598 */
struct ns1__executeStorageProcess_Response;	/* .\Service1.asmx.h:1674 */
struct ns1__executeStorageProcess_;	/* .\Service1.asmx.h:1674 */
struct ns1__AddFileToSql_Response;	/* .\Service1.asmx.h:1762 */
struct ns1__AddFileToSql_;	/* .\Service1.asmx.h:1762 */

/* .\Service1.asmx.h:357 */
#ifndef SOAP_TYPE_ns1__AddNumbersResponse
#define SOAP_TYPE_ns1__AddNumbersResponse (10)
/* complex XML schema type 'ns1:AddNumbersResponse': */
struct SOAP_CMAC ns1__AddNumbersResponse {
      public:
        /** Required element 'AddNumbersResult' of XML schema type 'xsd:int' */
        int AddNumbersResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__AddNumbersResponse */
        long soap_type() const { return SOAP_TYPE_ns1__AddNumbersResponse; }
        /** Constructor with member initializations */
        ns1__AddNumbersResponse() : AddNumbersResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__AddNumbersResponse * SOAP_FMAC2 soap_instantiate_ns1__AddNumbersResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:357 */
#ifndef SOAP_TYPE_ns1__AddNumbers
#define SOAP_TYPE_ns1__AddNumbers (11)
/* complex XML schema type 'ns1:AddNumbers': */
struct SOAP_CMAC ns1__AddNumbers {
      public:
        /** Required element 'NumberOne' of XML schema type 'xsd:int' */
        int NumberOne;
        /** Required element 'NumberTwo' of XML schema type 'xsd:int' */
        int NumberTwo;
      public:
        /** Return unique type id SOAP_TYPE_ns1__AddNumbers */
        long soap_type() const { return SOAP_TYPE_ns1__AddNumbers; }
        /** Constructor with member initializations */
        ns1__AddNumbers() : NumberOne(), NumberTwo() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__AddNumbers * SOAP_FMAC2 soap_instantiate_ns1__AddNumbers(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:427 */
#ifndef SOAP_TYPE_ns1__clearLinkResponse
#define SOAP_TYPE_ns1__clearLinkResponse (16)
/* complex XML schema type 'ns1:clearLinkResponse': */
struct SOAP_CMAC ns1__clearLinkResponse {
      public:
        /** Required element 'clearLinkResult' of XML schema type 'xsd:string' */
        std::wstring clearLinkResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__clearLinkResponse */
        long soap_type() const { return SOAP_TYPE_ns1__clearLinkResponse; }
        /** Constructor with member initializations */
        ns1__clearLinkResponse() : clearLinkResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__clearLinkResponse * SOAP_FMAC2 soap_instantiate_ns1__clearLinkResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:427 */
#ifndef SOAP_TYPE_ns1__clearLink
#define SOAP_TYPE_ns1__clearLink (17)
/* complex XML schema type 'ns1:clearLink': */
struct SOAP_CMAC ns1__clearLink {
      public:
        /** Required element 'bTimeContrl' of XML schema type 'xsd:boolean' */
        bool bTimeContrl;
      public:
        /** Return unique type id SOAP_TYPE_ns1__clearLink */
        long soap_type() const { return SOAP_TYPE_ns1__clearLink; }
        /** Constructor with member initializations */
        ns1__clearLink() : bTimeContrl() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__clearLink * SOAP_FMAC2 soap_instantiate_ns1__clearLink(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:494 */
#ifndef SOAP_TYPE_ns1__showExistLinkResponse
#define SOAP_TYPE_ns1__showExistLinkResponse (19)
/* complex XML schema type 'ns1:showExistLinkResponse': */
struct SOAP_CMAC ns1__showExistLinkResponse {
      public:
        /** Required element 'showExistLinkResult' of XML schema type 'xsd:string' */
        std::wstring showExistLinkResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__showExistLinkResponse */
        long soap_type() const { return SOAP_TYPE_ns1__showExistLinkResponse; }
        /** Constructor with member initializations */
        ns1__showExistLinkResponse() : showExistLinkResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__showExistLinkResponse * SOAP_FMAC2 soap_instantiate_ns1__showExistLinkResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:494 */
#ifndef SOAP_TYPE_ns1__showExistLink
#define SOAP_TYPE_ns1__showExistLink (20)
/* complex XML schema type 'ns1:showExistLink': */
struct SOAP_CMAC ns1__showExistLink {
      public:
        /** Return unique type id SOAP_TYPE_ns1__showExistLink */
        long soap_type() const { return SOAP_TYPE_ns1__showExistLink; }
        /** Constructor with member initializations */
        ns1__showExistLink() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__showExistLink * SOAP_FMAC2 soap_instantiate_ns1__showExistLink(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:564 */
#ifndef SOAP_TYPE_ns1__TestLinkSqlserverResponse
#define SOAP_TYPE_ns1__TestLinkSqlserverResponse (22)
/* complex XML schema type 'ns1:TestLinkSqlserverResponse': */
struct SOAP_CMAC ns1__TestLinkSqlserverResponse {
      public:
        /** Required element 'TestLinkSqlserverResult' of XML schema type 'xsd:string' */
        std::wstring TestLinkSqlserverResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__TestLinkSqlserverResponse */
        long soap_type() const { return SOAP_TYPE_ns1__TestLinkSqlserverResponse; }
        /** Constructor with member initializations */
        ns1__TestLinkSqlserverResponse() : TestLinkSqlserverResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__TestLinkSqlserverResponse * SOAP_FMAC2 soap_instantiate_ns1__TestLinkSqlserverResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:564 */
#ifndef SOAP_TYPE_ns1__TestLinkSqlserver
#define SOAP_TYPE_ns1__TestLinkSqlserver (23)
/* complex XML schema type 'ns1:TestLinkSqlserver': */
struct SOAP_CMAC ns1__TestLinkSqlserver {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
      public:
        /** Return unique type id SOAP_TYPE_ns1__TestLinkSqlserver */
        long soap_type() const { return SOAP_TYPE_ns1__TestLinkSqlserver; }
        /** Constructor with member initializations */
        ns1__TestLinkSqlserver() : serverInfo() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__TestLinkSqlserver * SOAP_FMAC2 soap_instantiate_ns1__TestLinkSqlserver(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:637 */
#ifndef SOAP_TYPE_ns1__executeSqlResponse
#define SOAP_TYPE_ns1__executeSqlResponse (25)
/* complex XML schema type 'ns1:executeSqlResponse': */
struct SOAP_CMAC ns1__executeSqlResponse {
      public:
        /** Required element 'executeSqlResult' of XML schema type 'xsd:string' */
        std::wstring executeSqlResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSqlResponse */
        long soap_type() const { return SOAP_TYPE_ns1__executeSqlResponse; }
        /** Constructor with member initializations */
        ns1__executeSqlResponse() : executeSqlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSqlResponse * SOAP_FMAC2 soap_instantiate_ns1__executeSqlResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:637 */
#ifndef SOAP_TYPE_ns1__executeSql
#define SOAP_TYPE_ns1__executeSql (26)
/* complex XML schema type 'ns1:executeSql': */
struct SOAP_CMAC ns1__executeSql {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql; }
        /** Constructor with member initializations */
        ns1__executeSql() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql * SOAP_FMAC2 soap_instantiate_ns1__executeSql(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:710 */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREbackEncordResponse
#define SOAP_TYPE_ns1__executeSql_USCOREbackEncordResponse (28)
/* complex XML schema type 'ns1:executeSql_backEncordResponse': */
struct SOAP_CMAC ns1__executeSql_USCOREbackEncordResponse {
      public:
        /** Required element 'executeSql_backEncordResult' of XML schema type 'xsd:string' */
        std::wstring executeSql_USCOREbackEncordResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_USCOREbackEncordResponse */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_USCOREbackEncordResponse; }
        /** Constructor with member initializations */
        ns1__executeSql_USCOREbackEncordResponse() : executeSql_USCOREbackEncordResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_USCOREbackEncordResponse * SOAP_FMAC2 soap_instantiate_ns1__executeSql_USCOREbackEncordResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:710 */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREbackEncord
#define SOAP_TYPE_ns1__executeSql_USCOREbackEncord (29)
/* complex XML schema type 'ns1:executeSql_backEncord': */
struct SOAP_CMAC ns1__executeSql_USCOREbackEncord {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_USCOREbackEncord */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_USCOREbackEncord; }
        /** Constructor with member initializations */
        ns1__executeSql_USCOREbackEncord() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_USCOREbackEncord * SOAP_FMAC2 soap_instantiate_ns1__executeSql_USCOREbackEncord(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:783 */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREencodeResponse
#define SOAP_TYPE_ns1__executeSql_USCOREencodeResponse (31)
/* complex XML schema type 'ns1:executeSql_encodeResponse': */
struct SOAP_CMAC ns1__executeSql_USCOREencodeResponse {
      public:
        /** Required element 'executeSql_encodeResult' of XML schema type 'xsd:string' */
        std::wstring executeSql_USCOREencodeResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_USCOREencodeResponse */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_USCOREencodeResponse; }
        /** Constructor with member initializations */
        ns1__executeSql_USCOREencodeResponse() : executeSql_USCOREencodeResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_USCOREencodeResponse * SOAP_FMAC2 soap_instantiate_ns1__executeSql_USCOREencodeResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:783 */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREencode
#define SOAP_TYPE_ns1__executeSql_USCOREencode (32)
/* complex XML schema type 'ns1:executeSql_encode': */
struct SOAP_CMAC ns1__executeSql_USCOREencode {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_USCOREencode */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_USCOREencode; }
        /** Constructor with member initializations */
        ns1__executeSql_USCOREencode() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_USCOREencode * SOAP_FMAC2 soap_instantiate_ns1__executeSql_USCOREencode(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:859 */
#ifndef SOAP_TYPE_ns1__insertXmlResponse
#define SOAP_TYPE_ns1__insertXmlResponse (34)
/* complex XML schema type 'ns1:insertXmlResponse': */
struct SOAP_CMAC ns1__insertXmlResponse {
      public:
        /** Required element 'insertXmlResult' of XML schema type 'xsd:string' */
        std::wstring insertXmlResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__insertXmlResponse */
        long soap_type() const { return SOAP_TYPE_ns1__insertXmlResponse; }
        /** Constructor with member initializations */
        ns1__insertXmlResponse() : insertXmlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__insertXmlResponse * SOAP_FMAC2 soap_instantiate_ns1__insertXmlResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:859 */
#ifndef SOAP_TYPE_ns1__insertXml
#define SOAP_TYPE_ns1__insertXml (35)
/* complex XML schema type 'ns1:insertXml': */
struct SOAP_CMAC ns1__insertXml {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'strXml' of XML schema type 'xsd:string' */
        std::wstring strXml;
        /** Required element 'encode' of XML schema type 'xsd:boolean' */
        bool encode;
      public:
        /** Return unique type id SOAP_TYPE_ns1__insertXml */
        long soap_type() const { return SOAP_TYPE_ns1__insertXml; }
        /** Constructor with member initializations */
        ns1__insertXml() : serverInfo(), strXml(), encode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__insertXml * SOAP_FMAC2 soap_instantiate_ns1__insertXml(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:935 */
#ifndef SOAP_TYPE_ns1__executeStorageProcessResponse
#define SOAP_TYPE_ns1__executeStorageProcessResponse (37)
/* complex XML schema type 'ns1:executeStorageProcessResponse': */
struct SOAP_CMAC ns1__executeStorageProcessResponse {
      public:
        /** Required element 'executeStorageProcessResult' of XML schema type 'xsd:string' */
        std::wstring executeStorageProcessResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeStorageProcessResponse */
        long soap_type() const { return SOAP_TYPE_ns1__executeStorageProcessResponse; }
        /** Constructor with member initializations */
        ns1__executeStorageProcessResponse() : executeStorageProcessResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeStorageProcessResponse * SOAP_FMAC2 soap_instantiate_ns1__executeStorageProcessResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:935 */
#ifndef SOAP_TYPE_ns1__executeStorageProcess
#define SOAP_TYPE_ns1__executeStorageProcess (38)
/* complex XML schema type 'ns1:executeStorageProcess': */
struct SOAP_CMAC ns1__executeStorageProcess {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'StorageProcessName' of XML schema type 'xsd:string' */
        std::wstring StorageProcessName;
        /** Required element 'Parameters' of XML schema type 'xsd:string' */
        std::wstring Parameters;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeStorageProcess */
        long soap_type() const { return SOAP_TYPE_ns1__executeStorageProcess; }
        /** Constructor with member initializations */
        ns1__executeStorageProcess() : serverInfo(), StorageProcessName(), Parameters() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeStorageProcess * SOAP_FMAC2 soap_instantiate_ns1__executeStorageProcess(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1023 */
#ifndef SOAP_TYPE_ns1__AddFileToSqlResponse
#define SOAP_TYPE_ns1__AddFileToSqlResponse (40)
/* complex XML schema type 'ns1:AddFileToSqlResponse': */
struct SOAP_CMAC ns1__AddFileToSqlResponse {
      public:
        /** Required element 'AddFileToSqlResult' of XML schema type 'xsd:string' */
        std::wstring AddFileToSqlResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__AddFileToSqlResponse */
        long soap_type() const { return SOAP_TYPE_ns1__AddFileToSqlResponse; }
        /** Constructor with member initializations */
        ns1__AddFileToSqlResponse() : AddFileToSqlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__AddFileToSqlResponse * SOAP_FMAC2 soap_instantiate_ns1__AddFileToSqlResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1023 */
#ifndef SOAP_TYPE_ns1__AddFileToSql
#define SOAP_TYPE_ns1__AddFileToSql (41)
/* complex XML schema type 'ns1:AddFileToSql': */
struct SOAP_CMAC ns1__AddFileToSql {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'strFileName' of XML schema type 'xsd:string' */
        std::wstring strFileName;
        /** Required element 'sPointer' of XML schema type 'xsd:string' */
        std::wstring sPointer;
        /** Required element 'tablenamefieldname' of XML schema type 'xsd:string' */
        std::wstring tablenamefieldname;
        /** Required element 'fileIP' of XML schema type 'xsd:string' */
        std::wstring fileIP;
        /** Required element 'fileUse' of XML schema type 'xsd:string' */
        std::wstring fileUse;
        /** Required element 'filePassword' of XML schema type 'xsd:string' */
        std::wstring filePassword;
      public:
        /** Return unique type id SOAP_TYPE_ns1__AddFileToSql */
        long soap_type() const { return SOAP_TYPE_ns1__AddFileToSql; }
        /** Constructor with member initializations */
        ns1__AddFileToSql() : serverInfo(), strFileName(), sPointer(), tablenamefieldname(), fileIP(), fileUse(), filePassword() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__AddFileToSql * SOAP_FMAC2 soap_instantiate_ns1__AddFileToSql(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1096 */
#ifndef SOAP_TYPE_ns1__AddNumbers_Response
#define SOAP_TYPE_ns1__AddNumbers_Response (43)
/* complex XML schema type 'ns1:AddNumbers-Response': */
struct SOAP_CMAC ns1__AddNumbers_Response {
      public:
        /** Required element 'AddNumbersResult' of XML schema type 'xsd:int' */
        int AddNumbersResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__AddNumbers_Response */
        long soap_type() const { return SOAP_TYPE_ns1__AddNumbers_Response; }
        /** Constructor with member initializations */
        ns1__AddNumbers_Response() : AddNumbersResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__AddNumbers_Response * SOAP_FMAC2 soap_instantiate_ns1__AddNumbers_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1096 */
#ifndef SOAP_TYPE_ns1__AddNumbers_
#define SOAP_TYPE_ns1__AddNumbers_ (44)
/* complex XML schema type 'ns1:AddNumbers': */
struct SOAP_CMAC ns1__AddNumbers_ {
      public:
        /** Required element 'NumberOne' of XML schema type 'xsd:int' */
        int NumberOne;
        /** Required element 'NumberTwo' of XML schema type 'xsd:int' */
        int NumberTwo;
      public:
        /** Return unique type id SOAP_TYPE_ns1__AddNumbers_ */
        long soap_type() const { return SOAP_TYPE_ns1__AddNumbers_; }
        /** Constructor with member initializations */
        ns1__AddNumbers_() : NumberOne(), NumberTwo() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__AddNumbers_ * SOAP_FMAC2 soap_instantiate_ns1__AddNumbers_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1166 */
#ifndef SOAP_TYPE_ns1__clearLink_Response
#define SOAP_TYPE_ns1__clearLink_Response (46)
/* complex XML schema type 'ns1:clearLink-Response': */
struct SOAP_CMAC ns1__clearLink_Response {
      public:
        /** Required element 'clearLinkResult' of XML schema type 'xsd:string' */
        std::wstring clearLinkResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__clearLink_Response */
        long soap_type() const { return SOAP_TYPE_ns1__clearLink_Response; }
        /** Constructor with member initializations */
        ns1__clearLink_Response() : clearLinkResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__clearLink_Response * SOAP_FMAC2 soap_instantiate_ns1__clearLink_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1166 */
#ifndef SOAP_TYPE_ns1__clearLink_
#define SOAP_TYPE_ns1__clearLink_ (47)
/* complex XML schema type 'ns1:clearLink': */
struct SOAP_CMAC ns1__clearLink_ {
      public:
        /** Required element 'bTimeContrl' of XML schema type 'xsd:boolean' */
        bool bTimeContrl;
      public:
        /** Return unique type id SOAP_TYPE_ns1__clearLink_ */
        long soap_type() const { return SOAP_TYPE_ns1__clearLink_; }
        /** Constructor with member initializations */
        ns1__clearLink_() : bTimeContrl() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__clearLink_ * SOAP_FMAC2 soap_instantiate_ns1__clearLink_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1233 */
#ifndef SOAP_TYPE_ns1__showExistLink_Response
#define SOAP_TYPE_ns1__showExistLink_Response (49)
/* complex XML schema type 'ns1:showExistLink-Response': */
struct SOAP_CMAC ns1__showExistLink_Response {
      public:
        /** Required element 'showExistLinkResult' of XML schema type 'xsd:string' */
        std::wstring showExistLinkResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__showExistLink_Response */
        long soap_type() const { return SOAP_TYPE_ns1__showExistLink_Response; }
        /** Constructor with member initializations */
        ns1__showExistLink_Response() : showExistLinkResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__showExistLink_Response * SOAP_FMAC2 soap_instantiate_ns1__showExistLink_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1233 */
#ifndef SOAP_TYPE_ns1__showExistLink_
#define SOAP_TYPE_ns1__showExistLink_ (50)
/* complex XML schema type 'ns1:showExistLink': */
struct SOAP_CMAC ns1__showExistLink_ {
      public:
        /** Return unique type id SOAP_TYPE_ns1__showExistLink_ */
        long soap_type() const { return SOAP_TYPE_ns1__showExistLink_; }
        /** Constructor with member initializations */
        ns1__showExistLink_() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__showExistLink_ * SOAP_FMAC2 soap_instantiate_ns1__showExistLink_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1303 */
#ifndef SOAP_TYPE_ns1__TestLinkSqlserver_Response
#define SOAP_TYPE_ns1__TestLinkSqlserver_Response (52)
/* complex XML schema type 'ns1:TestLinkSqlserver-Response': */
struct SOAP_CMAC ns1__TestLinkSqlserver_Response {
      public:
        /** Required element 'TestLinkSqlserverResult' of XML schema type 'xsd:string' */
        std::wstring TestLinkSqlserverResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__TestLinkSqlserver_Response */
        long soap_type() const { return SOAP_TYPE_ns1__TestLinkSqlserver_Response; }
        /** Constructor with member initializations */
        ns1__TestLinkSqlserver_Response() : TestLinkSqlserverResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__TestLinkSqlserver_Response * SOAP_FMAC2 soap_instantiate_ns1__TestLinkSqlserver_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1303 */
#ifndef SOAP_TYPE_ns1__TestLinkSqlserver_
#define SOAP_TYPE_ns1__TestLinkSqlserver_ (53)
/* complex XML schema type 'ns1:TestLinkSqlserver': */
struct SOAP_CMAC ns1__TestLinkSqlserver_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
      public:
        /** Return unique type id SOAP_TYPE_ns1__TestLinkSqlserver_ */
        long soap_type() const { return SOAP_TYPE_ns1__TestLinkSqlserver_; }
        /** Constructor with member initializations */
        ns1__TestLinkSqlserver_() : serverInfo() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__TestLinkSqlserver_ * SOAP_FMAC2 soap_instantiate_ns1__TestLinkSqlserver_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1376 */
#ifndef SOAP_TYPE_ns1__executeSql_Response
#define SOAP_TYPE_ns1__executeSql_Response (55)
/* complex XML schema type 'ns1:executeSql-Response': */
struct SOAP_CMAC ns1__executeSql_Response {
      public:
        /** Required element 'executeSqlResult' of XML schema type 'xsd:string' */
        std::wstring executeSqlResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_Response */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_Response; }
        /** Constructor with member initializations */
        ns1__executeSql_Response() : executeSqlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_Response * SOAP_FMAC2 soap_instantiate_ns1__executeSql_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1376 */
#ifndef SOAP_TYPE_ns1__executeSql_
#define SOAP_TYPE_ns1__executeSql_ (56)
/* complex XML schema type 'ns1:executeSql': */
struct SOAP_CMAC ns1__executeSql_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_ */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_; }
        /** Constructor with member initializations */
        ns1__executeSql_() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_ * SOAP_FMAC2 soap_instantiate_ns1__executeSql_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1449 */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREbackEncord_Response
#define SOAP_TYPE_ns1__executeSql_USCOREbackEncord_Response (58)
/* complex XML schema type 'ns1:executeSql_backEncord-Response': */
struct SOAP_CMAC ns1__executeSql_USCOREbackEncord_Response {
      public:
        /** Required element 'executeSql_backEncordResult' of XML schema type 'xsd:string' */
        std::wstring executeSql_USCOREbackEncordResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_USCOREbackEncord_Response */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_USCOREbackEncord_Response; }
        /** Constructor with member initializations */
        ns1__executeSql_USCOREbackEncord_Response() : executeSql_USCOREbackEncordResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_USCOREbackEncord_Response * SOAP_FMAC2 soap_instantiate_ns1__executeSql_USCOREbackEncord_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1449 */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREbackEncord_
#define SOAP_TYPE_ns1__executeSql_USCOREbackEncord_ (59)
/* complex XML schema type 'ns1:executeSql_backEncord': */
struct SOAP_CMAC ns1__executeSql_USCOREbackEncord_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_USCOREbackEncord_ */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_USCOREbackEncord_; }
        /** Constructor with member initializations */
        ns1__executeSql_USCOREbackEncord_() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_USCOREbackEncord_ * SOAP_FMAC2 soap_instantiate_ns1__executeSql_USCOREbackEncord_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1522 */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREencode_Response
#define SOAP_TYPE_ns1__executeSql_USCOREencode_Response (61)
/* complex XML schema type 'ns1:executeSql_encode-Response': */
struct SOAP_CMAC ns1__executeSql_USCOREencode_Response {
      public:
        /** Required element 'executeSql_encodeResult' of XML schema type 'xsd:string' */
        std::wstring executeSql_USCOREencodeResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_USCOREencode_Response */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_USCOREencode_Response; }
        /** Constructor with member initializations */
        ns1__executeSql_USCOREencode_Response() : executeSql_USCOREencodeResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_USCOREencode_Response * SOAP_FMAC2 soap_instantiate_ns1__executeSql_USCOREencode_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1522 */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREencode_
#define SOAP_TYPE_ns1__executeSql_USCOREencode_ (62)
/* complex XML schema type 'ns1:executeSql_encode': */
struct SOAP_CMAC ns1__executeSql_USCOREencode_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeSql_USCOREencode_ */
        long soap_type() const { return SOAP_TYPE_ns1__executeSql_USCOREencode_; }
        /** Constructor with member initializations */
        ns1__executeSql_USCOREencode_() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeSql_USCOREencode_ * SOAP_FMAC2 soap_instantiate_ns1__executeSql_USCOREencode_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1598 */
#ifndef SOAP_TYPE_ns1__insertXml_Response
#define SOAP_TYPE_ns1__insertXml_Response (64)
/* complex XML schema type 'ns1:insertXml-Response': */
struct SOAP_CMAC ns1__insertXml_Response {
      public:
        /** Required element 'insertXmlResult' of XML schema type 'xsd:string' */
        std::wstring insertXmlResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__insertXml_Response */
        long soap_type() const { return SOAP_TYPE_ns1__insertXml_Response; }
        /** Constructor with member initializations */
        ns1__insertXml_Response() : insertXmlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__insertXml_Response * SOAP_FMAC2 soap_instantiate_ns1__insertXml_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1598 */
#ifndef SOAP_TYPE_ns1__insertXml_
#define SOAP_TYPE_ns1__insertXml_ (65)
/* complex XML schema type 'ns1:insertXml': */
struct SOAP_CMAC ns1__insertXml_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'strXml' of XML schema type 'xsd:string' */
        std::wstring strXml;
        /** Required element 'encode' of XML schema type 'xsd:boolean' */
        bool encode;
      public:
        /** Return unique type id SOAP_TYPE_ns1__insertXml_ */
        long soap_type() const { return SOAP_TYPE_ns1__insertXml_; }
        /** Constructor with member initializations */
        ns1__insertXml_() : serverInfo(), strXml(), encode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__insertXml_ * SOAP_FMAC2 soap_instantiate_ns1__insertXml_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1674 */
#ifndef SOAP_TYPE_ns1__executeStorageProcess_Response
#define SOAP_TYPE_ns1__executeStorageProcess_Response (67)
/* complex XML schema type 'ns1:executeStorageProcess-Response': */
struct SOAP_CMAC ns1__executeStorageProcess_Response {
      public:
        /** Required element 'executeStorageProcessResult' of XML schema type 'xsd:string' */
        std::wstring executeStorageProcessResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeStorageProcess_Response */
        long soap_type() const { return SOAP_TYPE_ns1__executeStorageProcess_Response; }
        /** Constructor with member initializations */
        ns1__executeStorageProcess_Response() : executeStorageProcessResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeStorageProcess_Response * SOAP_FMAC2 soap_instantiate_ns1__executeStorageProcess_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1674 */
#ifndef SOAP_TYPE_ns1__executeStorageProcess_
#define SOAP_TYPE_ns1__executeStorageProcess_ (68)
/* complex XML schema type 'ns1:executeStorageProcess': */
struct SOAP_CMAC ns1__executeStorageProcess_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'StorageProcessName' of XML schema type 'xsd:string' */
        std::wstring StorageProcessName;
        /** Required element 'Parameters' of XML schema type 'xsd:string' */
        std::wstring Parameters;
      public:
        /** Return unique type id SOAP_TYPE_ns1__executeStorageProcess_ */
        long soap_type() const { return SOAP_TYPE_ns1__executeStorageProcess_; }
        /** Constructor with member initializations */
        ns1__executeStorageProcess_() : serverInfo(), StorageProcessName(), Parameters() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__executeStorageProcess_ * SOAP_FMAC2 soap_instantiate_ns1__executeStorageProcess_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1762 */
#ifndef SOAP_TYPE_ns1__AddFileToSql_Response
#define SOAP_TYPE_ns1__AddFileToSql_Response (70)
/* complex XML schema type 'ns1:AddFileToSql-Response': */
struct SOAP_CMAC ns1__AddFileToSql_Response {
      public:
        /** Required element 'AddFileToSqlResult' of XML schema type 'xsd:string' */
        std::wstring AddFileToSqlResult;
      public:
        /** Return unique type id SOAP_TYPE_ns1__AddFileToSql_Response */
        long soap_type() const { return SOAP_TYPE_ns1__AddFileToSql_Response; }
        /** Constructor with member initializations */
        ns1__AddFileToSql_Response() : AddFileToSqlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__AddFileToSql_Response * SOAP_FMAC2 soap_instantiate_ns1__AddFileToSql_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1762 */
#ifndef SOAP_TYPE_ns1__AddFileToSql_
#define SOAP_TYPE_ns1__AddFileToSql_ (71)
/* complex XML schema type 'ns1:AddFileToSql': */
struct SOAP_CMAC ns1__AddFileToSql_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'strFileName' of XML schema type 'xsd:string' */
        std::wstring strFileName;
        /** Required element 'sPointer' of XML schema type 'xsd:string' */
        std::wstring sPointer;
        /** Required element 'tablenamefieldname' of XML schema type 'xsd:string' */
        std::wstring tablenamefieldname;
        /** Required element 'fileIP' of XML schema type 'xsd:string' */
        std::wstring fileIP;
        /** Required element 'fileUse' of XML schema type 'xsd:string' */
        std::wstring fileUse;
        /** Required element 'filePassword' of XML schema type 'xsd:string' */
        std::wstring filePassword;
      public:
        /** Return unique type id SOAP_TYPE_ns1__AddFileToSql_ */
        long soap_type() const { return SOAP_TYPE_ns1__AddFileToSql_; }
        /** Constructor with member initializations */
        ns1__AddFileToSql_() : serverInfo(), strFileName(), sPointer(), tablenamefieldname(), fileIP(), fileUse(), filePassword() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns1__AddFileToSql_ * SOAP_FMAC2 soap_instantiate_ns1__AddFileToSql_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\Service1.asmx.h:1823 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (72)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* .\Service1.asmx.h:1823 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (73)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* .\Service1.asmx.h:1823 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (75)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* .\Service1.asmx.h:1823 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (78)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* .\Service1.asmx.h:1823 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (79)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* bool has binding name 'bool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (12)
#endif

/* std::wstring has binding name 'std__wstring' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (13)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (79)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (78)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (75)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (73)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (72)
#endif

/* struct ns1__AddFileToSql_ has binding name 'ns1__AddFileToSql_' for type 'ns1:AddFileToSql' */
#ifndef SOAP_TYPE_ns1__AddFileToSql_
#define SOAP_TYPE_ns1__AddFileToSql_ (71)
#endif

/* struct ns1__AddFileToSql_Response has binding name 'ns1__AddFileToSql_Response' for type 'ns1:AddFileToSql-Response' */
#ifndef SOAP_TYPE_ns1__AddFileToSql_Response
#define SOAP_TYPE_ns1__AddFileToSql_Response (70)
#endif

/* struct ns1__executeStorageProcess_ has binding name 'ns1__executeStorageProcess_' for type 'ns1:executeStorageProcess' */
#ifndef SOAP_TYPE_ns1__executeStorageProcess_
#define SOAP_TYPE_ns1__executeStorageProcess_ (68)
#endif

/* struct ns1__executeStorageProcess_Response has binding name 'ns1__executeStorageProcess_Response' for type 'ns1:executeStorageProcess-Response' */
#ifndef SOAP_TYPE_ns1__executeStorageProcess_Response
#define SOAP_TYPE_ns1__executeStorageProcess_Response (67)
#endif

/* struct ns1__insertXml_ has binding name 'ns1__insertXml_' for type 'ns1:insertXml' */
#ifndef SOAP_TYPE_ns1__insertXml_
#define SOAP_TYPE_ns1__insertXml_ (65)
#endif

/* struct ns1__insertXml_Response has binding name 'ns1__insertXml_Response' for type 'ns1:insertXml-Response' */
#ifndef SOAP_TYPE_ns1__insertXml_Response
#define SOAP_TYPE_ns1__insertXml_Response (64)
#endif

/* struct ns1__executeSql_USCOREencode_ has binding name 'ns1__executeSql_USCOREencode_' for type 'ns1:executeSql_encode' */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREencode_
#define SOAP_TYPE_ns1__executeSql_USCOREencode_ (62)
#endif

/* struct ns1__executeSql_USCOREencode_Response has binding name 'ns1__executeSql_USCOREencode_Response' for type 'ns1:executeSql_encode-Response' */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREencode_Response
#define SOAP_TYPE_ns1__executeSql_USCOREencode_Response (61)
#endif

/* struct ns1__executeSql_USCOREbackEncord_ has binding name 'ns1__executeSql_USCOREbackEncord_' for type 'ns1:executeSql_backEncord' */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREbackEncord_
#define SOAP_TYPE_ns1__executeSql_USCOREbackEncord_ (59)
#endif

/* struct ns1__executeSql_USCOREbackEncord_Response has binding name 'ns1__executeSql_USCOREbackEncord_Response' for type 'ns1:executeSql_backEncord-Response' */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREbackEncord_Response
#define SOAP_TYPE_ns1__executeSql_USCOREbackEncord_Response (58)
#endif

/* struct ns1__executeSql_ has binding name 'ns1__executeSql_' for type 'ns1:executeSql' */
#ifndef SOAP_TYPE_ns1__executeSql_
#define SOAP_TYPE_ns1__executeSql_ (56)
#endif

/* struct ns1__executeSql_Response has binding name 'ns1__executeSql_Response' for type 'ns1:executeSql-Response' */
#ifndef SOAP_TYPE_ns1__executeSql_Response
#define SOAP_TYPE_ns1__executeSql_Response (55)
#endif

/* struct ns1__TestLinkSqlserver_ has binding name 'ns1__TestLinkSqlserver_' for type 'ns1:TestLinkSqlserver' */
#ifndef SOAP_TYPE_ns1__TestLinkSqlserver_
#define SOAP_TYPE_ns1__TestLinkSqlserver_ (53)
#endif

/* struct ns1__TestLinkSqlserver_Response has binding name 'ns1__TestLinkSqlserver_Response' for type 'ns1:TestLinkSqlserver-Response' */
#ifndef SOAP_TYPE_ns1__TestLinkSqlserver_Response
#define SOAP_TYPE_ns1__TestLinkSqlserver_Response (52)
#endif

/* struct ns1__showExistLink_ has binding name 'ns1__showExistLink_' for type 'ns1:showExistLink' */
#ifndef SOAP_TYPE_ns1__showExistLink_
#define SOAP_TYPE_ns1__showExistLink_ (50)
#endif

/* struct ns1__showExistLink_Response has binding name 'ns1__showExistLink_Response' for type 'ns1:showExistLink-Response' */
#ifndef SOAP_TYPE_ns1__showExistLink_Response
#define SOAP_TYPE_ns1__showExistLink_Response (49)
#endif

/* struct ns1__clearLink_ has binding name 'ns1__clearLink_' for type 'ns1:clearLink' */
#ifndef SOAP_TYPE_ns1__clearLink_
#define SOAP_TYPE_ns1__clearLink_ (47)
#endif

/* struct ns1__clearLink_Response has binding name 'ns1__clearLink_Response' for type 'ns1:clearLink-Response' */
#ifndef SOAP_TYPE_ns1__clearLink_Response
#define SOAP_TYPE_ns1__clearLink_Response (46)
#endif

/* struct ns1__AddNumbers_ has binding name 'ns1__AddNumbers_' for type 'ns1:AddNumbers' */
#ifndef SOAP_TYPE_ns1__AddNumbers_
#define SOAP_TYPE_ns1__AddNumbers_ (44)
#endif

/* struct ns1__AddNumbers_Response has binding name 'ns1__AddNumbers_Response' for type 'ns1:AddNumbers-Response' */
#ifndef SOAP_TYPE_ns1__AddNumbers_Response
#define SOAP_TYPE_ns1__AddNumbers_Response (43)
#endif

/* struct ns1__AddFileToSql has binding name 'ns1__AddFileToSql' for type 'ns1:AddFileToSql' */
#ifndef SOAP_TYPE_ns1__AddFileToSql
#define SOAP_TYPE_ns1__AddFileToSql (41)
#endif

/* struct ns1__AddFileToSqlResponse has binding name 'ns1__AddFileToSqlResponse' for type 'ns1:AddFileToSqlResponse' */
#ifndef SOAP_TYPE_ns1__AddFileToSqlResponse
#define SOAP_TYPE_ns1__AddFileToSqlResponse (40)
#endif

/* struct ns1__executeStorageProcess has binding name 'ns1__executeStorageProcess' for type 'ns1:executeStorageProcess' */
#ifndef SOAP_TYPE_ns1__executeStorageProcess
#define SOAP_TYPE_ns1__executeStorageProcess (38)
#endif

/* struct ns1__executeStorageProcessResponse has binding name 'ns1__executeStorageProcessResponse' for type 'ns1:executeStorageProcessResponse' */
#ifndef SOAP_TYPE_ns1__executeStorageProcessResponse
#define SOAP_TYPE_ns1__executeStorageProcessResponse (37)
#endif

/* struct ns1__insertXml has binding name 'ns1__insertXml' for type 'ns1:insertXml' */
#ifndef SOAP_TYPE_ns1__insertXml
#define SOAP_TYPE_ns1__insertXml (35)
#endif

/* struct ns1__insertXmlResponse has binding name 'ns1__insertXmlResponse' for type 'ns1:insertXmlResponse' */
#ifndef SOAP_TYPE_ns1__insertXmlResponse
#define SOAP_TYPE_ns1__insertXmlResponse (34)
#endif

/* struct ns1__executeSql_USCOREencode has binding name 'ns1__executeSql_USCOREencode' for type 'ns1:executeSql_encode' */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREencode
#define SOAP_TYPE_ns1__executeSql_USCOREencode (32)
#endif

/* struct ns1__executeSql_USCOREencodeResponse has binding name 'ns1__executeSql_USCOREencodeResponse' for type 'ns1:executeSql_encodeResponse' */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREencodeResponse
#define SOAP_TYPE_ns1__executeSql_USCOREencodeResponse (31)
#endif

/* struct ns1__executeSql_USCOREbackEncord has binding name 'ns1__executeSql_USCOREbackEncord' for type 'ns1:executeSql_backEncord' */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREbackEncord
#define SOAP_TYPE_ns1__executeSql_USCOREbackEncord (29)
#endif

/* struct ns1__executeSql_USCOREbackEncordResponse has binding name 'ns1__executeSql_USCOREbackEncordResponse' for type 'ns1:executeSql_backEncordResponse' */
#ifndef SOAP_TYPE_ns1__executeSql_USCOREbackEncordResponse
#define SOAP_TYPE_ns1__executeSql_USCOREbackEncordResponse (28)
#endif

/* struct ns1__executeSql has binding name 'ns1__executeSql' for type 'ns1:executeSql' */
#ifndef SOAP_TYPE_ns1__executeSql
#define SOAP_TYPE_ns1__executeSql (26)
#endif

/* struct ns1__executeSqlResponse has binding name 'ns1__executeSqlResponse' for type 'ns1:executeSqlResponse' */
#ifndef SOAP_TYPE_ns1__executeSqlResponse
#define SOAP_TYPE_ns1__executeSqlResponse (25)
#endif

/* struct ns1__TestLinkSqlserver has binding name 'ns1__TestLinkSqlserver' for type 'ns1:TestLinkSqlserver' */
#ifndef SOAP_TYPE_ns1__TestLinkSqlserver
#define SOAP_TYPE_ns1__TestLinkSqlserver (23)
#endif

/* struct ns1__TestLinkSqlserverResponse has binding name 'ns1__TestLinkSqlserverResponse' for type 'ns1:TestLinkSqlserverResponse' */
#ifndef SOAP_TYPE_ns1__TestLinkSqlserverResponse
#define SOAP_TYPE_ns1__TestLinkSqlserverResponse (22)
#endif

/* struct ns1__showExistLink has binding name 'ns1__showExistLink' for type 'ns1:showExistLink' */
#ifndef SOAP_TYPE_ns1__showExistLink
#define SOAP_TYPE_ns1__showExistLink (20)
#endif

/* struct ns1__showExistLinkResponse has binding name 'ns1__showExistLinkResponse' for type 'ns1:showExistLinkResponse' */
#ifndef SOAP_TYPE_ns1__showExistLinkResponse
#define SOAP_TYPE_ns1__showExistLinkResponse (19)
#endif

/* struct ns1__clearLink has binding name 'ns1__clearLink' for type 'ns1:clearLink' */
#ifndef SOAP_TYPE_ns1__clearLink
#define SOAP_TYPE_ns1__clearLink (17)
#endif

/* struct ns1__clearLinkResponse has binding name 'ns1__clearLinkResponse' for type 'ns1:clearLinkResponse' */
#ifndef SOAP_TYPE_ns1__clearLinkResponse
#define SOAP_TYPE_ns1__clearLinkResponse (16)
#endif

/* struct ns1__AddNumbers has binding name 'ns1__AddNumbers' for type 'ns1:AddNumbers' */
#ifndef SOAP_TYPE_ns1__AddNumbers
#define SOAP_TYPE_ns1__AddNumbers (11)
#endif

/* struct ns1__AddNumbersResponse has binding name 'ns1__AddNumbersResponse' for type 'ns1:AddNumbersResponse' */
#ifndef SOAP_TYPE_ns1__AddNumbersResponse
#define SOAP_TYPE_ns1__AddNumbersResponse (10)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (81)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (80)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (74)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    
    /** Web service synchronous operation 'soap_call_ns1__AddNumbers' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__AddNumbers(struct soap *soap, const char *soap_endpoint, const char *soap_action, int NumberOne, int NumberTwo, int &AddNumbersResult);
    /** Web service asynchronous operation 'soap_send_ns1__AddNumbers' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__AddNumbers(struct soap *soap, const char *soap_endpoint, const char *soap_action, int NumberOne, int NumberTwo);
    /** Web service asynchronous operation 'soap_recv_ns1__AddNumbers' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__AddNumbers(struct soap *soap, int &AddNumbersResult);
    
    /** Web service synchronous operation 'soap_call_ns1__clearLink' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__clearLink(struct soap *soap, const char *soap_endpoint, const char *soap_action, bool bTimeContrl, std::wstring &clearLinkResult);
    /** Web service asynchronous operation 'soap_send_ns1__clearLink' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__clearLink(struct soap *soap, const char *soap_endpoint, const char *soap_action, bool bTimeContrl);
    /** Web service asynchronous operation 'soap_recv_ns1__clearLink' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__clearLink(struct soap *soap, std::wstring &clearLinkResult);
    
    /** Web service synchronous operation 'soap_call_ns1__showExistLink' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__showExistLink(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::wstring &showExistLinkResult);
    /** Web service asynchronous operation 'soap_send_ns1__showExistLink' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__showExistLink(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns1__showExistLink' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__showExistLink(struct soap *soap, std::wstring &showExistLinkResult);
    
    /** Web service synchronous operation 'soap_call_ns1__TestLinkSqlserver' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__TestLinkSqlserver(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, std::wstring &TestLinkSqlserverResult);
    /** Web service asynchronous operation 'soap_send_ns1__TestLinkSqlserver' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__TestLinkSqlserver(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo);
    /** Web service asynchronous operation 'soap_recv_ns1__TestLinkSqlserver' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__TestLinkSqlserver(struct soap *soap, std::wstring &TestLinkSqlserverResult);
    
    /** Web service synchronous operation 'soap_call_ns1__executeSql' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__executeSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSqlResult);
    /** Web service asynchronous operation 'soap_send_ns1__executeSql' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__executeSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_ns1__executeSql' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__executeSql(struct soap *soap, std::wstring &executeSqlResult);
    
    /** Web service synchronous operation 'soap_call_ns1__executeSql_USCOREbackEncord' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__executeSql_USCOREbackEncord(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSql_USCOREbackEncordResult);
    /** Web service asynchronous operation 'soap_send_ns1__executeSql_USCOREbackEncord' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__executeSql_USCOREbackEncord(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_ns1__executeSql_USCOREbackEncord' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__executeSql_USCOREbackEncord(struct soap *soap, std::wstring &executeSql_USCOREbackEncordResult);
    
    /** Web service synchronous operation 'soap_call_ns1__executeSql_USCOREencode' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__executeSql_USCOREencode(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSql_USCOREencodeResult);
    /** Web service asynchronous operation 'soap_send_ns1__executeSql_USCOREencode' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__executeSql_USCOREencode(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_ns1__executeSql_USCOREencode' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__executeSql_USCOREencode(struct soap *soap, std::wstring &executeSql_USCOREencodeResult);
    
    /** Web service synchronous operation 'soap_call_ns1__insertXml' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__insertXml(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strXml, bool encode, std::wstring &insertXmlResult);
    /** Web service asynchronous operation 'soap_send_ns1__insertXml' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__insertXml(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strXml, bool encode);
    /** Web service asynchronous operation 'soap_recv_ns1__insertXml' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__insertXml(struct soap *soap, std::wstring &insertXmlResult);
    
    /** Web service synchronous operation 'soap_call_ns1__executeStorageProcess' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__executeStorageProcess(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& StorageProcessName, const std::wstring& Parameters, std::wstring &executeStorageProcessResult);
    /** Web service asynchronous operation 'soap_send_ns1__executeStorageProcess' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__executeStorageProcess(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& StorageProcessName, const std::wstring& Parameters);
    /** Web service asynchronous operation 'soap_recv_ns1__executeStorageProcess' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__executeStorageProcess(struct soap *soap, std::wstring &executeStorageProcessResult);
    
    /** Web service synchronous operation 'soap_call_ns1__AddFileToSql' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__AddFileToSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strFileName, const std::wstring& sPointer, const std::wstring& tablenamefieldname, const std::wstring& fileIP, const std::wstring& fileUse, const std::wstring& filePassword, std::wstring &AddFileToSqlResult);
    /** Web service asynchronous operation 'soap_send_ns1__AddFileToSql' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__AddFileToSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strFileName, const std::wstring& sPointer, const std::wstring& tablenamefieldname, const std::wstring& fileIP, const std::wstring& fileUse, const std::wstring& filePassword);
    /** Web service asynchronous operation 'soap_recv_ns1__AddFileToSql' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__AddFileToSql(struct soap *soap, std::wstring &AddFileToSqlResult);
    
    /** Web service synchronous operation 'soap_call_ns1__AddNumbers_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__AddNumbers_(struct soap *soap, const char *soap_endpoint, const char *soap_action, int NumberOne, int NumberTwo, int &AddNumbersResult);
    /** Web service asynchronous operation 'soap_send_ns1__AddNumbers_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__AddNumbers_(struct soap *soap, const char *soap_endpoint, const char *soap_action, int NumberOne, int NumberTwo);
    /** Web service asynchronous operation 'soap_recv_ns1__AddNumbers_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__AddNumbers_(struct soap *soap, int &AddNumbersResult);
    
    /** Web service synchronous operation 'soap_call_ns1__clearLink_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__clearLink_(struct soap *soap, const char *soap_endpoint, const char *soap_action, bool bTimeContrl, std::wstring &clearLinkResult);
    /** Web service asynchronous operation 'soap_send_ns1__clearLink_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__clearLink_(struct soap *soap, const char *soap_endpoint, const char *soap_action, bool bTimeContrl);
    /** Web service asynchronous operation 'soap_recv_ns1__clearLink_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__clearLink_(struct soap *soap, std::wstring &clearLinkResult);
    
    /** Web service synchronous operation 'soap_call_ns1__showExistLink_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__showExistLink_(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::wstring &showExistLinkResult);
    /** Web service asynchronous operation 'soap_send_ns1__showExistLink_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__showExistLink_(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_ns1__showExistLink_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__showExistLink_(struct soap *soap, std::wstring &showExistLinkResult);
    
    /** Web service synchronous operation 'soap_call_ns1__TestLinkSqlserver_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__TestLinkSqlserver_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, std::wstring &TestLinkSqlserverResult);
    /** Web service asynchronous operation 'soap_send_ns1__TestLinkSqlserver_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__TestLinkSqlserver_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo);
    /** Web service asynchronous operation 'soap_recv_ns1__TestLinkSqlserver_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__TestLinkSqlserver_(struct soap *soap, std::wstring &TestLinkSqlserverResult);
    
    /** Web service synchronous operation 'soap_call_ns1__executeSql_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__executeSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSqlResult);
    /** Web service asynchronous operation 'soap_send_ns1__executeSql_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__executeSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_ns1__executeSql_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__executeSql_(struct soap *soap, std::wstring &executeSqlResult);
    
    /** Web service synchronous operation 'soap_call_ns1__executeSql_USCOREbackEncord_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__executeSql_USCOREbackEncord_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSql_USCOREbackEncordResult);
    /** Web service asynchronous operation 'soap_send_ns1__executeSql_USCOREbackEncord_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__executeSql_USCOREbackEncord_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_ns1__executeSql_USCOREbackEncord_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__executeSql_USCOREbackEncord_(struct soap *soap, std::wstring &executeSql_USCOREbackEncordResult);
    
    /** Web service synchronous operation 'soap_call_ns1__executeSql_USCOREencode_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__executeSql_USCOREencode_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSql_USCOREencodeResult);
    /** Web service asynchronous operation 'soap_send_ns1__executeSql_USCOREencode_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__executeSql_USCOREencode_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_ns1__executeSql_USCOREencode_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__executeSql_USCOREencode_(struct soap *soap, std::wstring &executeSql_USCOREencodeResult);
    
    /** Web service synchronous operation 'soap_call_ns1__insertXml_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__insertXml_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strXml, bool encode, std::wstring &insertXmlResult);
    /** Web service asynchronous operation 'soap_send_ns1__insertXml_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__insertXml_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strXml, bool encode);
    /** Web service asynchronous operation 'soap_recv_ns1__insertXml_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__insertXml_(struct soap *soap, std::wstring &insertXmlResult);
    
    /** Web service synchronous operation 'soap_call_ns1__executeStorageProcess_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__executeStorageProcess_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& StorageProcessName, const std::wstring& Parameters, std::wstring &executeStorageProcessResult);
    /** Web service asynchronous operation 'soap_send_ns1__executeStorageProcess_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__executeStorageProcess_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& StorageProcessName, const std::wstring& Parameters);
    /** Web service asynchronous operation 'soap_recv_ns1__executeStorageProcess_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__executeStorageProcess_(struct soap *soap, std::wstring &executeStorageProcessResult);
    
    /** Web service synchronous operation 'soap_call_ns1__AddFileToSql_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__AddFileToSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strFileName, const std::wstring& sPointer, const std::wstring& tablenamefieldname, const std::wstring& fileIP, const std::wstring& fileUse, const std::wstring& filePassword, std::wstring &AddFileToSqlResult);
    /** Web service asynchronous operation 'soap_send_ns1__AddFileToSql_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns1__AddFileToSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strFileName, const std::wstring& sPointer, const std::wstring& tablenamefieldname, const std::wstring& fileIP, const std::wstring& fileUse, const std::wstring& filePassword);
    /** Web service asynchronous operation 'soap_recv_ns1__AddFileToSql_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns1__AddFileToSql_(struct soap *soap, std::wstring &AddFileToSqlResult);

#endif

/* End of soapStub.h */
