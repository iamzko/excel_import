/* soapStub.h
   Generated by gSOAP 2.8.111 for .\web_service_allin.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#include <vector>
#define SOAP_NAMESPACE_OF_MAC	"http://machine.webService.workHelper.cnki.com/"
#define SOAP_NAMESPACE_OF_SER	"http://Fantasy/WebServiceDemo/"

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 208111
# error "GSOAP VERSION 208111 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

class MAC__fetchRobotConfig;	/* .\web_service_allin.h:28 */
class MAC__fetchRobotConfigResponse;	/* .\web_service_allin.h:30 */
class MAC__GetLineServerInfo;	/* .\web_service_allin.h:32 */
class MAC__GetLineServerInfoResponse;	/* .\web_service_allin.h:34 */
class MAC__addRobotRunState;	/* .\web_service_allin.h:36 */
class MAC__addRobotRunStateResponse;	/* .\web_service_allin.h:38 */
class MAC__GetLineServerList;	/* .\web_service_allin.h:40 */
class MAC__GetLineServerListResponse;	/* .\web_service_allin.h:42 */
class MAC__GetServerInfo;	/* .\web_service_allin.h:44 */
class MAC__GetServerInfoResponse;	/* .\web_service_allin.h:46 */
struct __MAC__fetchRobotConfig;	/* .\web_service_allin.h:467 */
struct __MAC__GetLineServerInfo;	/* .\web_service_allin.h:534 */
struct __MAC__addRobotRunState;	/* .\web_service_allin.h:601 */
struct __MAC__GetLineServerList;	/* .\web_service_allin.h:668 */
struct __MAC__GetServerInfo;	/* .\web_service_allin.h:735 */
struct SER__AddNumbersResponse;	/* .\web_service_allin.h:1030 */
struct SER__AddNumbers;	/* .\web_service_allin.h:1030 */
struct SER__clearLinkResponse;	/* .\web_service_allin.h:1100 */
struct SER__clearLink;	/* .\web_service_allin.h:1100 */
struct SER__showExistLinkResponse;	/* .\web_service_allin.h:1167 */
struct SER__showExistLink;	/* .\web_service_allin.h:1167 */
struct SER__TestLinkSqlserverResponse;	/* .\web_service_allin.h:1237 */
struct SER__TestLinkSqlserver;	/* .\web_service_allin.h:1237 */
struct SER__executeSqlResponse;	/* .\web_service_allin.h:1310 */
struct SER__executeSql;	/* .\web_service_allin.h:1310 */
struct SER__executeSql_USCOREbackEncordResponse;	/* .\web_service_allin.h:1383 */
struct SER__executeSql_USCOREbackEncord;	/* .\web_service_allin.h:1383 */
struct SER__executeSql_USCOREencodeResponse;	/* .\web_service_allin.h:1456 */
struct SER__executeSql_USCOREencode;	/* .\web_service_allin.h:1456 */
struct SER__insertXmlResponse;	/* .\web_service_allin.h:1532 */
struct SER__insertXml;	/* .\web_service_allin.h:1532 */
struct SER__executeStorageProcessResponse;	/* .\web_service_allin.h:1608 */
struct SER__executeStorageProcess;	/* .\web_service_allin.h:1608 */
struct SER__AddFileToSqlResponse;	/* .\web_service_allin.h:1696 */
struct SER__AddFileToSql;	/* .\web_service_allin.h:1696 */
struct SER__AddNumbers_Response;	/* .\web_service_allin.h:1769 */
struct SER__AddNumbers_;	/* .\web_service_allin.h:1769 */
struct SER__clearLink_Response;	/* .\web_service_allin.h:1839 */
struct SER__clearLink_;	/* .\web_service_allin.h:1839 */
struct SER__showExistLink_Response;	/* .\web_service_allin.h:1906 */
struct SER__showExistLink_;	/* .\web_service_allin.h:1906 */
struct SER__TestLinkSqlserver_Response;	/* .\web_service_allin.h:1976 */
struct SER__TestLinkSqlserver_;	/* .\web_service_allin.h:1976 */
struct SER__executeSql_Response;	/* .\web_service_allin.h:2049 */
struct SER__executeSql_;	/* .\web_service_allin.h:2049 */
struct SER__executeSql_USCOREbackEncord_Response;	/* .\web_service_allin.h:2122 */
struct SER__executeSql_USCOREbackEncord_;	/* .\web_service_allin.h:2122 */
struct SER__executeSql_USCOREencode_Response;	/* .\web_service_allin.h:2195 */
struct SER__executeSql_USCOREencode_;	/* .\web_service_allin.h:2195 */
struct SER__insertXml_Response;	/* .\web_service_allin.h:2271 */
struct SER__insertXml_;	/* .\web_service_allin.h:2271 */
struct SER__executeStorageProcess_Response;	/* .\web_service_allin.h:2347 */
struct SER__executeStorageProcess_;	/* .\web_service_allin.h:2347 */
struct SER__AddFileToSql_Response;	/* .\web_service_allin.h:2435 */
struct SER__AddFileToSql_;	/* .\web_service_allin.h:2435 */

/* .\web_service_allin.h:28 */
#ifndef SOAP_TYPE_MAC__fetchRobotConfig
#define SOAP_TYPE_MAC__fetchRobotConfig (8)
/* complex XML schema type 'MAC:fetchRobotConfig': */
class SOAP_CMAC MAC__fetchRobotConfig {
      public:
        /// Optional element 'token' of XML schema type 'xsd:string'
        wchar_t *token;
        /// Optional element 'managerIP' of XML schema type 'xsd:string'
        wchar_t *managerIP;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__fetchRobotConfig
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__fetchRobotConfig; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__fetchRobotConfig, default initialized and not managed by a soap context
        virtual MAC__fetchRobotConfig *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__fetchRobotConfig); }
      public:
        /// Constructor with default initializations
        MAC__fetchRobotConfig() : token(), managerIP(), soap() { }
        virtual ~MAC__fetchRobotConfig() { }
        /// Friend allocator used by soap_new_MAC__fetchRobotConfig(struct soap*, int)
        friend SOAP_FMAC1 MAC__fetchRobotConfig * SOAP_FMAC2 soap_instantiate_MAC__fetchRobotConfig(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:30 */
#ifndef SOAP_TYPE_MAC__fetchRobotConfigResponse
#define SOAP_TYPE_MAC__fetchRobotConfigResponse (9)
/* complex XML schema type 'MAC:fetchRobotConfigResponse': */
class SOAP_CMAC MAC__fetchRobotConfigResponse {
      public:
        /// Optional element 'return' of XML schema type 'xsd:string'
        wchar_t *return_;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__fetchRobotConfigResponse
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__fetchRobotConfigResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__fetchRobotConfigResponse, default initialized and not managed by a soap context
        virtual MAC__fetchRobotConfigResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__fetchRobotConfigResponse); }
      public:
        /// Constructor with default initializations
        MAC__fetchRobotConfigResponse() : return_(), soap() { }
        virtual ~MAC__fetchRobotConfigResponse() { }
        /// Friend allocator used by soap_new_MAC__fetchRobotConfigResponse(struct soap*, int)
        friend SOAP_FMAC1 MAC__fetchRobotConfigResponse * SOAP_FMAC2 soap_instantiate_MAC__fetchRobotConfigResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:32 */
#ifndef SOAP_TYPE_MAC__GetLineServerInfo
#define SOAP_TYPE_MAC__GetLineServerInfo (10)
/* complex XML schema type 'MAC:GetLineServerInfo': */
class SOAP_CMAC MAC__GetLineServerInfo {
      public:
        /// Optional element 'token' of XML schema type 'xsd:string'
        wchar_t *token;
        /// Required element 'lineId' of XML schema type 'xsd:int'
        int lineId;
        /// Required element 'outUse' of XML schema type 'xsd:boolean'
        bool outUse;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__GetLineServerInfo
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__GetLineServerInfo; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__GetLineServerInfo, default initialized and not managed by a soap context
        virtual MAC__GetLineServerInfo *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__GetLineServerInfo); }
      public:
        /// Constructor with default initializations
        MAC__GetLineServerInfo() : token(), lineId(), outUse(), soap() { }
        virtual ~MAC__GetLineServerInfo() { }
        /// Friend allocator used by soap_new_MAC__GetLineServerInfo(struct soap*, int)
        friend SOAP_FMAC1 MAC__GetLineServerInfo * SOAP_FMAC2 soap_instantiate_MAC__GetLineServerInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:34 */
#ifndef SOAP_TYPE_MAC__GetLineServerInfoResponse
#define SOAP_TYPE_MAC__GetLineServerInfoResponse (11)
/* complex XML schema type 'MAC:GetLineServerInfoResponse': */
class SOAP_CMAC MAC__GetLineServerInfoResponse {
      public:
        /// Optional element 'return' of XML schema type 'xsd:string'
        wchar_t *return_;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__GetLineServerInfoResponse
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__GetLineServerInfoResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__GetLineServerInfoResponse, default initialized and not managed by a soap context
        virtual MAC__GetLineServerInfoResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__GetLineServerInfoResponse); }
      public:
        /// Constructor with default initializations
        MAC__GetLineServerInfoResponse() : return_(), soap() { }
        virtual ~MAC__GetLineServerInfoResponse() { }
        /// Friend allocator used by soap_new_MAC__GetLineServerInfoResponse(struct soap*, int)
        friend SOAP_FMAC1 MAC__GetLineServerInfoResponse * SOAP_FMAC2 soap_instantiate_MAC__GetLineServerInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:36 */
#ifndef SOAP_TYPE_MAC__addRobotRunState
#define SOAP_TYPE_MAC__addRobotRunState (12)
/* complex XML schema type 'MAC:addRobotRunState': */
class SOAP_CMAC MAC__addRobotRunState {
      public:
        /// Optional element 'token' of XML schema type 'xsd:string'
        wchar_t *token;
        /// Optional element 'managerIP' of XML schema type 'xsd:string'
        wchar_t *managerIP;
        /// Required element 'LineId' of XML schema type 'xsd:int'
        int LineId;
        /// Required element 'PostId' of XML schema type 'xsd:int'
        int PostId;
        /// Required element 'runningNum' of XML schema type 'xsd:int'
        int runningNum;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__addRobotRunState
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__addRobotRunState; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__addRobotRunState, default initialized and not managed by a soap context
        virtual MAC__addRobotRunState *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__addRobotRunState); }
      public:
        /// Constructor with default initializations
        MAC__addRobotRunState() : token(), managerIP(), LineId(), PostId(), runningNum(), soap() { }
        virtual ~MAC__addRobotRunState() { }
        /// Friend allocator used by soap_new_MAC__addRobotRunState(struct soap*, int)
        friend SOAP_FMAC1 MAC__addRobotRunState * SOAP_FMAC2 soap_instantiate_MAC__addRobotRunState(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:38 */
#ifndef SOAP_TYPE_MAC__addRobotRunStateResponse
#define SOAP_TYPE_MAC__addRobotRunStateResponse (13)
/* complex XML schema type 'MAC:addRobotRunStateResponse': */
class SOAP_CMAC MAC__addRobotRunStateResponse {
      public:
        /// Optional element 'return' of XML schema type 'xsd:string'
        wchar_t *return_;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__addRobotRunStateResponse
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__addRobotRunStateResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__addRobotRunStateResponse, default initialized and not managed by a soap context
        virtual MAC__addRobotRunStateResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__addRobotRunStateResponse); }
      public:
        /// Constructor with default initializations
        MAC__addRobotRunStateResponse() : return_(), soap() { }
        virtual ~MAC__addRobotRunStateResponse() { }
        /// Friend allocator used by soap_new_MAC__addRobotRunStateResponse(struct soap*, int)
        friend SOAP_FMAC1 MAC__addRobotRunStateResponse * SOAP_FMAC2 soap_instantiate_MAC__addRobotRunStateResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:40 */
#ifndef SOAP_TYPE_MAC__GetLineServerList
#define SOAP_TYPE_MAC__GetLineServerList (14)
/* complex XML schema type 'MAC:GetLineServerList': */
class SOAP_CMAC MAC__GetLineServerList {
      public:
        /// Required element 'outUse' of XML schema type 'xsd:boolean'
        bool outUse;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__GetLineServerList
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__GetLineServerList; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__GetLineServerList, default initialized and not managed by a soap context
        virtual MAC__GetLineServerList *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__GetLineServerList); }
      public:
        /// Constructor with default initializations
        MAC__GetLineServerList() : outUse(), soap() { }
        virtual ~MAC__GetLineServerList() { }
        /// Friend allocator used by soap_new_MAC__GetLineServerList(struct soap*, int)
        friend SOAP_FMAC1 MAC__GetLineServerList * SOAP_FMAC2 soap_instantiate_MAC__GetLineServerList(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:42 */
#ifndef SOAP_TYPE_MAC__GetLineServerListResponse
#define SOAP_TYPE_MAC__GetLineServerListResponse (15)
/* complex XML schema type 'MAC:GetLineServerListResponse': */
class SOAP_CMAC MAC__GetLineServerListResponse {
      public:
        /// Optional element 'return' of XML schema type 'xsd:string'
        wchar_t *return_;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__GetLineServerListResponse
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__GetLineServerListResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__GetLineServerListResponse, default initialized and not managed by a soap context
        virtual MAC__GetLineServerListResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__GetLineServerListResponse); }
      public:
        /// Constructor with default initializations
        MAC__GetLineServerListResponse() : return_(), soap() { }
        virtual ~MAC__GetLineServerListResponse() { }
        /// Friend allocator used by soap_new_MAC__GetLineServerListResponse(struct soap*, int)
        friend SOAP_FMAC1 MAC__GetLineServerListResponse * SOAP_FMAC2 soap_instantiate_MAC__GetLineServerListResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:44 */
#ifndef SOAP_TYPE_MAC__GetServerInfo
#define SOAP_TYPE_MAC__GetServerInfo (16)
/* complex XML schema type 'MAC:GetServerInfo': */
class SOAP_CMAC MAC__GetServerInfo {
      public:
        /// Required element 'serverId' of XML schema type 'xsd:int'
        int serverId;
        /// Required element 'postId' of XML schema type 'xsd:int'
        int postId;
        /// Required element 'outUse' of XML schema type 'xsd:boolean'
        bool outUse;
        /// Required element 'isSync' of XML schema type 'xsd:boolean'
        bool isSync;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__GetServerInfo
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__GetServerInfo; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__GetServerInfo, default initialized and not managed by a soap context
        virtual MAC__GetServerInfo *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__GetServerInfo); }
      public:
        /// Constructor with default initializations
        MAC__GetServerInfo() : serverId(), postId(), outUse(), isSync(), soap() { }
        virtual ~MAC__GetServerInfo() { }
        /// Friend allocator used by soap_new_MAC__GetServerInfo(struct soap*, int)
        friend SOAP_FMAC1 MAC__GetServerInfo * SOAP_FMAC2 soap_instantiate_MAC__GetServerInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:46 */
#ifndef SOAP_TYPE_MAC__GetServerInfoResponse
#define SOAP_TYPE_MAC__GetServerInfoResponse (17)
/* complex XML schema type 'MAC:GetServerInfoResponse': */
class SOAP_CMAC MAC__GetServerInfoResponse {
      public:
        /// Optional element 'return' of XML schema type 'xsd:string'
        wchar_t *return_;
        /// Context that manages this object
        struct soap *soap;
      public:
        /// Return unique type id SOAP_TYPE_MAC__GetServerInfoResponse
        virtual long soap_type(void) const { return SOAP_TYPE_MAC__GetServerInfoResponse; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type MAC__GetServerInfoResponse, default initialized and not managed by a soap context
        virtual MAC__GetServerInfoResponse *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(MAC__GetServerInfoResponse); }
      public:
        /// Constructor with default initializations
        MAC__GetServerInfoResponse() : return_(), soap() { }
        virtual ~MAC__GetServerInfoResponse() { }
        /// Friend allocator used by soap_new_MAC__GetServerInfoResponse(struct soap*, int)
        friend SOAP_FMAC1 MAC__GetServerInfoResponse * SOAP_FMAC2 soap_instantiate_MAC__GetServerInfoResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:467 */
#ifndef SOAP_TYPE___MAC__fetchRobotConfig
#define SOAP_TYPE___MAC__fetchRobotConfig (25)
/* Wrapper: */
struct SOAP_CMAC __MAC__fetchRobotConfig {
      public:
        /** Optional element 'MAC:fetchRobotConfig' of XML schema type 'MAC:fetchRobotConfig' */
        MAC__fetchRobotConfig *MAC__fetchRobotConfig_;
      public:
        /** Return unique type id SOAP_TYPE___MAC__fetchRobotConfig */
        long soap_type() const { return SOAP_TYPE___MAC__fetchRobotConfig; }
        /** Constructor with member initializations */
        __MAC__fetchRobotConfig() : MAC__fetchRobotConfig_() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __MAC__fetchRobotConfig * SOAP_FMAC2 soap_instantiate___MAC__fetchRobotConfig(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:534 */
#ifndef SOAP_TYPE___MAC__GetLineServerInfo
#define SOAP_TYPE___MAC__GetLineServerInfo (29)
/* Wrapper: */
struct SOAP_CMAC __MAC__GetLineServerInfo {
      public:
        /** Optional element 'MAC:GetLineServerInfo' of XML schema type 'MAC:GetLineServerInfo' */
        MAC__GetLineServerInfo *MAC__GetLineServerInfo_;
      public:
        /** Return unique type id SOAP_TYPE___MAC__GetLineServerInfo */
        long soap_type() const { return SOAP_TYPE___MAC__GetLineServerInfo; }
        /** Constructor with member initializations */
        __MAC__GetLineServerInfo() : MAC__GetLineServerInfo_() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __MAC__GetLineServerInfo * SOAP_FMAC2 soap_instantiate___MAC__GetLineServerInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:601 */
#ifndef SOAP_TYPE___MAC__addRobotRunState
#define SOAP_TYPE___MAC__addRobotRunState (33)
/* Wrapper: */
struct SOAP_CMAC __MAC__addRobotRunState {
      public:
        /** Optional element 'MAC:addRobotRunState' of XML schema type 'MAC:addRobotRunState' */
        MAC__addRobotRunState *MAC__addRobotRunState_;
      public:
        /** Return unique type id SOAP_TYPE___MAC__addRobotRunState */
        long soap_type() const { return SOAP_TYPE___MAC__addRobotRunState; }
        /** Constructor with member initializations */
        __MAC__addRobotRunState() : MAC__addRobotRunState_() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __MAC__addRobotRunState * SOAP_FMAC2 soap_instantiate___MAC__addRobotRunState(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:668 */
#ifndef SOAP_TYPE___MAC__GetLineServerList
#define SOAP_TYPE___MAC__GetLineServerList (37)
/* Wrapper: */
struct SOAP_CMAC __MAC__GetLineServerList {
      public:
        /** Optional element 'MAC:GetLineServerList' of XML schema type 'MAC:GetLineServerList' */
        MAC__GetLineServerList *MAC__GetLineServerList_;
      public:
        /** Return unique type id SOAP_TYPE___MAC__GetLineServerList */
        long soap_type() const { return SOAP_TYPE___MAC__GetLineServerList; }
        /** Constructor with member initializations */
        __MAC__GetLineServerList() : MAC__GetLineServerList_() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __MAC__GetLineServerList * SOAP_FMAC2 soap_instantiate___MAC__GetLineServerList(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:735 */
#ifndef SOAP_TYPE___MAC__GetServerInfo
#define SOAP_TYPE___MAC__GetServerInfo (41)
/* Wrapper: */
struct SOAP_CMAC __MAC__GetServerInfo {
      public:
        /** Optional element 'MAC:GetServerInfo' of XML schema type 'MAC:GetServerInfo' */
        MAC__GetServerInfo *MAC__GetServerInfo_;
      public:
        /** Return unique type id SOAP_TYPE___MAC__GetServerInfo */
        long soap_type() const { return SOAP_TYPE___MAC__GetServerInfo; }
        /** Constructor with member initializations */
        __MAC__GetServerInfo() : MAC__GetServerInfo_() { }
        /** Friend allocator */
        friend SOAP_FMAC1 __MAC__GetServerInfo * SOAP_FMAC2 soap_instantiate___MAC__GetServerInfo(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1030 */
#ifndef SOAP_TYPE_SER__AddNumbersResponse
#define SOAP_TYPE_SER__AddNumbersResponse (44)
/* complex XML schema type 'SER:AddNumbersResponse': */
struct SOAP_CMAC SER__AddNumbersResponse {
      public:
        /** Required element 'AddNumbersResult' of XML schema type 'xsd:int' */
        int AddNumbersResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__AddNumbersResponse */
        long soap_type() const { return SOAP_TYPE_SER__AddNumbersResponse; }
        /** Constructor with member initializations */
        SER__AddNumbersResponse() : AddNumbersResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__AddNumbersResponse * SOAP_FMAC2 soap_instantiate_SER__AddNumbersResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1030 */
#ifndef SOAP_TYPE_SER__AddNumbers
#define SOAP_TYPE_SER__AddNumbers (45)
/* complex XML schema type 'SER:AddNumbers': */
struct SOAP_CMAC SER__AddNumbers {
      public:
        /** Required element 'NumberOne' of XML schema type 'xsd:int' */
        int NumberOne;
        /** Required element 'NumberTwo' of XML schema type 'xsd:int' */
        int NumberTwo;
      public:
        /** Return unique type id SOAP_TYPE_SER__AddNumbers */
        long soap_type() const { return SOAP_TYPE_SER__AddNumbers; }
        /** Constructor with member initializations */
        SER__AddNumbers() : NumberOne(), NumberTwo() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__AddNumbers * SOAP_FMAC2 soap_instantiate_SER__AddNumbers(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1100 */
#ifndef SOAP_TYPE_SER__clearLinkResponse
#define SOAP_TYPE_SER__clearLinkResponse (49)
/* complex XML schema type 'SER:clearLinkResponse': */
struct SOAP_CMAC SER__clearLinkResponse {
      public:
        /** Required element 'clearLinkResult' of XML schema type 'xsd:string' */
        std::wstring clearLinkResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__clearLinkResponse */
        long soap_type() const { return SOAP_TYPE_SER__clearLinkResponse; }
        /** Constructor with member initializations */
        SER__clearLinkResponse() : clearLinkResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__clearLinkResponse * SOAP_FMAC2 soap_instantiate_SER__clearLinkResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1100 */
#ifndef SOAP_TYPE_SER__clearLink
#define SOAP_TYPE_SER__clearLink (50)
/* complex XML schema type 'SER:clearLink': */
struct SOAP_CMAC SER__clearLink {
      public:
        /** Required element 'bTimeContrl' of XML schema type 'xsd:boolean' */
        bool bTimeContrl;
      public:
        /** Return unique type id SOAP_TYPE_SER__clearLink */
        long soap_type() const { return SOAP_TYPE_SER__clearLink; }
        /** Constructor with member initializations */
        SER__clearLink() : bTimeContrl() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__clearLink * SOAP_FMAC2 soap_instantiate_SER__clearLink(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1167 */
#ifndef SOAP_TYPE_SER__showExistLinkResponse
#define SOAP_TYPE_SER__showExistLinkResponse (52)
/* complex XML schema type 'SER:showExistLinkResponse': */
struct SOAP_CMAC SER__showExistLinkResponse {
      public:
        /** Required element 'showExistLinkResult' of XML schema type 'xsd:string' */
        std::wstring showExistLinkResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__showExistLinkResponse */
        long soap_type() const { return SOAP_TYPE_SER__showExistLinkResponse; }
        /** Constructor with member initializations */
        SER__showExistLinkResponse() : showExistLinkResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__showExistLinkResponse * SOAP_FMAC2 soap_instantiate_SER__showExistLinkResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1167 */
#ifndef SOAP_TYPE_SER__showExistLink
#define SOAP_TYPE_SER__showExistLink (53)
/* complex XML schema type 'SER:showExistLink': */
struct SOAP_CMAC SER__showExistLink {
      public:
        /** Return unique type id SOAP_TYPE_SER__showExistLink */
        long soap_type() const { return SOAP_TYPE_SER__showExistLink; }
        /** Constructor with member initializations */
        SER__showExistLink() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__showExistLink * SOAP_FMAC2 soap_instantiate_SER__showExistLink(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1237 */
#ifndef SOAP_TYPE_SER__TestLinkSqlserverResponse
#define SOAP_TYPE_SER__TestLinkSqlserverResponse (55)
/* complex XML schema type 'SER:TestLinkSqlserverResponse': */
struct SOAP_CMAC SER__TestLinkSqlserverResponse {
      public:
        /** Required element 'TestLinkSqlserverResult' of XML schema type 'xsd:string' */
        std::wstring TestLinkSqlserverResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__TestLinkSqlserverResponse */
        long soap_type() const { return SOAP_TYPE_SER__TestLinkSqlserverResponse; }
        /** Constructor with member initializations */
        SER__TestLinkSqlserverResponse() : TestLinkSqlserverResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__TestLinkSqlserverResponse * SOAP_FMAC2 soap_instantiate_SER__TestLinkSqlserverResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1237 */
#ifndef SOAP_TYPE_SER__TestLinkSqlserver
#define SOAP_TYPE_SER__TestLinkSqlserver (56)
/* complex XML schema type 'SER:TestLinkSqlserver': */
struct SOAP_CMAC SER__TestLinkSqlserver {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
      public:
        /** Return unique type id SOAP_TYPE_SER__TestLinkSqlserver */
        long soap_type() const { return SOAP_TYPE_SER__TestLinkSqlserver; }
        /** Constructor with member initializations */
        SER__TestLinkSqlserver() : serverInfo() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__TestLinkSqlserver * SOAP_FMAC2 soap_instantiate_SER__TestLinkSqlserver(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1310 */
#ifndef SOAP_TYPE_SER__executeSqlResponse
#define SOAP_TYPE_SER__executeSqlResponse (58)
/* complex XML schema type 'SER:executeSqlResponse': */
struct SOAP_CMAC SER__executeSqlResponse {
      public:
        /** Required element 'executeSqlResult' of XML schema type 'xsd:string' */
        std::wstring executeSqlResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSqlResponse */
        long soap_type() const { return SOAP_TYPE_SER__executeSqlResponse; }
        /** Constructor with member initializations */
        SER__executeSqlResponse() : executeSqlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSqlResponse * SOAP_FMAC2 soap_instantiate_SER__executeSqlResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1310 */
#ifndef SOAP_TYPE_SER__executeSql
#define SOAP_TYPE_SER__executeSql (59)
/* complex XML schema type 'SER:executeSql': */
struct SOAP_CMAC SER__executeSql {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql */
        long soap_type() const { return SOAP_TYPE_SER__executeSql; }
        /** Constructor with member initializations */
        SER__executeSql() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql * SOAP_FMAC2 soap_instantiate_SER__executeSql(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1383 */
#ifndef SOAP_TYPE_SER__executeSql_USCOREbackEncordResponse
#define SOAP_TYPE_SER__executeSql_USCOREbackEncordResponse (61)
/* complex XML schema type 'SER:executeSql_backEncordResponse': */
struct SOAP_CMAC SER__executeSql_USCOREbackEncordResponse {
      public:
        /** Required element 'executeSql_backEncordResult' of XML schema type 'xsd:string' */
        std::wstring executeSql_USCOREbackEncordResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_USCOREbackEncordResponse */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_USCOREbackEncordResponse; }
        /** Constructor with member initializations */
        SER__executeSql_USCOREbackEncordResponse() : executeSql_USCOREbackEncordResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_USCOREbackEncordResponse * SOAP_FMAC2 soap_instantiate_SER__executeSql_USCOREbackEncordResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1383 */
#ifndef SOAP_TYPE_SER__executeSql_USCOREbackEncord
#define SOAP_TYPE_SER__executeSql_USCOREbackEncord (62)
/* complex XML schema type 'SER:executeSql_backEncord': */
struct SOAP_CMAC SER__executeSql_USCOREbackEncord {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_USCOREbackEncord */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_USCOREbackEncord; }
        /** Constructor with member initializations */
        SER__executeSql_USCOREbackEncord() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_USCOREbackEncord * SOAP_FMAC2 soap_instantiate_SER__executeSql_USCOREbackEncord(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1456 */
#ifndef SOAP_TYPE_SER__executeSql_USCOREencodeResponse
#define SOAP_TYPE_SER__executeSql_USCOREencodeResponse (64)
/* complex XML schema type 'SER:executeSql_encodeResponse': */
struct SOAP_CMAC SER__executeSql_USCOREencodeResponse {
      public:
        /** Required element 'executeSql_encodeResult' of XML schema type 'xsd:string' */
        std::wstring executeSql_USCOREencodeResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_USCOREencodeResponse */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_USCOREencodeResponse; }
        /** Constructor with member initializations */
        SER__executeSql_USCOREencodeResponse() : executeSql_USCOREencodeResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_USCOREencodeResponse * SOAP_FMAC2 soap_instantiate_SER__executeSql_USCOREencodeResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1456 */
#ifndef SOAP_TYPE_SER__executeSql_USCOREencode
#define SOAP_TYPE_SER__executeSql_USCOREencode (65)
/* complex XML schema type 'SER:executeSql_encode': */
struct SOAP_CMAC SER__executeSql_USCOREencode {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_USCOREencode */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_USCOREencode; }
        /** Constructor with member initializations */
        SER__executeSql_USCOREencode() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_USCOREencode * SOAP_FMAC2 soap_instantiate_SER__executeSql_USCOREencode(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1532 */
#ifndef SOAP_TYPE_SER__insertXmlResponse
#define SOAP_TYPE_SER__insertXmlResponse (67)
/* complex XML schema type 'SER:insertXmlResponse': */
struct SOAP_CMAC SER__insertXmlResponse {
      public:
        /** Required element 'insertXmlResult' of XML schema type 'xsd:string' */
        std::wstring insertXmlResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__insertXmlResponse */
        long soap_type() const { return SOAP_TYPE_SER__insertXmlResponse; }
        /** Constructor with member initializations */
        SER__insertXmlResponse() : insertXmlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__insertXmlResponse * SOAP_FMAC2 soap_instantiate_SER__insertXmlResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1532 */
#ifndef SOAP_TYPE_SER__insertXml
#define SOAP_TYPE_SER__insertXml (68)
/* complex XML schema type 'SER:insertXml': */
struct SOAP_CMAC SER__insertXml {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'strXml' of XML schema type 'xsd:string' */
        std::wstring strXml;
        /** Required element 'encode' of XML schema type 'xsd:boolean' */
        bool encode;
      public:
        /** Return unique type id SOAP_TYPE_SER__insertXml */
        long soap_type() const { return SOAP_TYPE_SER__insertXml; }
        /** Constructor with member initializations */
        SER__insertXml() : serverInfo(), strXml(), encode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__insertXml * SOAP_FMAC2 soap_instantiate_SER__insertXml(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1608 */
#ifndef SOAP_TYPE_SER__executeStorageProcessResponse
#define SOAP_TYPE_SER__executeStorageProcessResponse (70)
/* complex XML schema type 'SER:executeStorageProcessResponse': */
struct SOAP_CMAC SER__executeStorageProcessResponse {
      public:
        /** Required element 'executeStorageProcessResult' of XML schema type 'xsd:string' */
        std::wstring executeStorageProcessResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeStorageProcessResponse */
        long soap_type() const { return SOAP_TYPE_SER__executeStorageProcessResponse; }
        /** Constructor with member initializations */
        SER__executeStorageProcessResponse() : executeStorageProcessResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeStorageProcessResponse * SOAP_FMAC2 soap_instantiate_SER__executeStorageProcessResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1608 */
#ifndef SOAP_TYPE_SER__executeStorageProcess
#define SOAP_TYPE_SER__executeStorageProcess (71)
/* complex XML schema type 'SER:executeStorageProcess': */
struct SOAP_CMAC SER__executeStorageProcess {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'StorageProcessName' of XML schema type 'xsd:string' */
        std::wstring StorageProcessName;
        /** Required element 'Parameters' of XML schema type 'xsd:string' */
        std::wstring Parameters;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeStorageProcess */
        long soap_type() const { return SOAP_TYPE_SER__executeStorageProcess; }
        /** Constructor with member initializations */
        SER__executeStorageProcess() : serverInfo(), StorageProcessName(), Parameters() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeStorageProcess * SOAP_FMAC2 soap_instantiate_SER__executeStorageProcess(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1696 */
#ifndef SOAP_TYPE_SER__AddFileToSqlResponse
#define SOAP_TYPE_SER__AddFileToSqlResponse (73)
/* complex XML schema type 'SER:AddFileToSqlResponse': */
struct SOAP_CMAC SER__AddFileToSqlResponse {
      public:
        /** Required element 'AddFileToSqlResult' of XML schema type 'xsd:string' */
        std::wstring AddFileToSqlResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__AddFileToSqlResponse */
        long soap_type() const { return SOAP_TYPE_SER__AddFileToSqlResponse; }
        /** Constructor with member initializations */
        SER__AddFileToSqlResponse() : AddFileToSqlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__AddFileToSqlResponse * SOAP_FMAC2 soap_instantiate_SER__AddFileToSqlResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1696 */
#ifndef SOAP_TYPE_SER__AddFileToSql
#define SOAP_TYPE_SER__AddFileToSql (74)
/* complex XML schema type 'SER:AddFileToSql': */
struct SOAP_CMAC SER__AddFileToSql {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'strFileName' of XML schema type 'xsd:string' */
        std::wstring strFileName;
        /** Required element 'sPointer' of XML schema type 'xsd:string' */
        std::wstring sPointer;
        /** Required element 'tablenamefieldname' of XML schema type 'xsd:string' */
        std::wstring tablenamefieldname;
        /** Required element 'fileIP' of XML schema type 'xsd:string' */
        std::wstring fileIP;
        /** Required element 'fileUse' of XML schema type 'xsd:string' */
        std::wstring fileUse;
        /** Required element 'filePassword' of XML schema type 'xsd:string' */
        std::wstring filePassword;
      public:
        /** Return unique type id SOAP_TYPE_SER__AddFileToSql */
        long soap_type() const { return SOAP_TYPE_SER__AddFileToSql; }
        /** Constructor with member initializations */
        SER__AddFileToSql() : serverInfo(), strFileName(), sPointer(), tablenamefieldname(), fileIP(), fileUse(), filePassword() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__AddFileToSql * SOAP_FMAC2 soap_instantiate_SER__AddFileToSql(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1769 */
#ifndef SOAP_TYPE_SER__AddNumbers_Response
#define SOAP_TYPE_SER__AddNumbers_Response (76)
/* complex XML schema type 'SER:AddNumbers-Response': */
struct SOAP_CMAC SER__AddNumbers_Response {
      public:
        /** Required element 'AddNumbersResult' of XML schema type 'xsd:int' */
        int AddNumbersResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__AddNumbers_Response */
        long soap_type() const { return SOAP_TYPE_SER__AddNumbers_Response; }
        /** Constructor with member initializations */
        SER__AddNumbers_Response() : AddNumbersResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__AddNumbers_Response * SOAP_FMAC2 soap_instantiate_SER__AddNumbers_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1769 */
#ifndef SOAP_TYPE_SER__AddNumbers_
#define SOAP_TYPE_SER__AddNumbers_ (77)
/* complex XML schema type 'SER:AddNumbers': */
struct SOAP_CMAC SER__AddNumbers_ {
      public:
        /** Required element 'NumberOne' of XML schema type 'xsd:int' */
        int NumberOne;
        /** Required element 'NumberTwo' of XML schema type 'xsd:int' */
        int NumberTwo;
      public:
        /** Return unique type id SOAP_TYPE_SER__AddNumbers_ */
        long soap_type() const { return SOAP_TYPE_SER__AddNumbers_; }
        /** Constructor with member initializations */
        SER__AddNumbers_() : NumberOne(), NumberTwo() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__AddNumbers_ * SOAP_FMAC2 soap_instantiate_SER__AddNumbers_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1839 */
#ifndef SOAP_TYPE_SER__clearLink_Response
#define SOAP_TYPE_SER__clearLink_Response (79)
/* complex XML schema type 'SER:clearLink-Response': */
struct SOAP_CMAC SER__clearLink_Response {
      public:
        /** Required element 'clearLinkResult' of XML schema type 'xsd:string' */
        std::wstring clearLinkResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__clearLink_Response */
        long soap_type() const { return SOAP_TYPE_SER__clearLink_Response; }
        /** Constructor with member initializations */
        SER__clearLink_Response() : clearLinkResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__clearLink_Response * SOAP_FMAC2 soap_instantiate_SER__clearLink_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1839 */
#ifndef SOAP_TYPE_SER__clearLink_
#define SOAP_TYPE_SER__clearLink_ (80)
/* complex XML schema type 'SER:clearLink': */
struct SOAP_CMAC SER__clearLink_ {
      public:
        /** Required element 'bTimeContrl' of XML schema type 'xsd:boolean' */
        bool bTimeContrl;
      public:
        /** Return unique type id SOAP_TYPE_SER__clearLink_ */
        long soap_type() const { return SOAP_TYPE_SER__clearLink_; }
        /** Constructor with member initializations */
        SER__clearLink_() : bTimeContrl() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__clearLink_ * SOAP_FMAC2 soap_instantiate_SER__clearLink_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1906 */
#ifndef SOAP_TYPE_SER__showExistLink_Response
#define SOAP_TYPE_SER__showExistLink_Response (82)
/* complex XML schema type 'SER:showExistLink-Response': */
struct SOAP_CMAC SER__showExistLink_Response {
      public:
        /** Required element 'showExistLinkResult' of XML schema type 'xsd:string' */
        std::wstring showExistLinkResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__showExistLink_Response */
        long soap_type() const { return SOAP_TYPE_SER__showExistLink_Response; }
        /** Constructor with member initializations */
        SER__showExistLink_Response() : showExistLinkResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__showExistLink_Response * SOAP_FMAC2 soap_instantiate_SER__showExistLink_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1906 */
#ifndef SOAP_TYPE_SER__showExistLink_
#define SOAP_TYPE_SER__showExistLink_ (83)
/* complex XML schema type 'SER:showExistLink': */
struct SOAP_CMAC SER__showExistLink_ {
      public:
        /** Return unique type id SOAP_TYPE_SER__showExistLink_ */
        long soap_type() const { return SOAP_TYPE_SER__showExistLink_; }
        /** Constructor with member initializations */
        SER__showExistLink_() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__showExistLink_ * SOAP_FMAC2 soap_instantiate_SER__showExistLink_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1976 */
#ifndef SOAP_TYPE_SER__TestLinkSqlserver_Response
#define SOAP_TYPE_SER__TestLinkSqlserver_Response (85)
/* complex XML schema type 'SER:TestLinkSqlserver-Response': */
struct SOAP_CMAC SER__TestLinkSqlserver_Response {
      public:
        /** Required element 'TestLinkSqlserverResult' of XML schema type 'xsd:string' */
        std::wstring TestLinkSqlserverResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__TestLinkSqlserver_Response */
        long soap_type() const { return SOAP_TYPE_SER__TestLinkSqlserver_Response; }
        /** Constructor with member initializations */
        SER__TestLinkSqlserver_Response() : TestLinkSqlserverResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__TestLinkSqlserver_Response * SOAP_FMAC2 soap_instantiate_SER__TestLinkSqlserver_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:1976 */
#ifndef SOAP_TYPE_SER__TestLinkSqlserver_
#define SOAP_TYPE_SER__TestLinkSqlserver_ (86)
/* complex XML schema type 'SER:TestLinkSqlserver': */
struct SOAP_CMAC SER__TestLinkSqlserver_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
      public:
        /** Return unique type id SOAP_TYPE_SER__TestLinkSqlserver_ */
        long soap_type() const { return SOAP_TYPE_SER__TestLinkSqlserver_; }
        /** Constructor with member initializations */
        SER__TestLinkSqlserver_() : serverInfo() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__TestLinkSqlserver_ * SOAP_FMAC2 soap_instantiate_SER__TestLinkSqlserver_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2049 */
#ifndef SOAP_TYPE_SER__executeSql_Response
#define SOAP_TYPE_SER__executeSql_Response (88)
/* complex XML schema type 'SER:executeSql-Response': */
struct SOAP_CMAC SER__executeSql_Response {
      public:
        /** Required element 'executeSqlResult' of XML schema type 'xsd:string' */
        std::wstring executeSqlResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_Response */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_Response; }
        /** Constructor with member initializations */
        SER__executeSql_Response() : executeSqlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_Response * SOAP_FMAC2 soap_instantiate_SER__executeSql_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2049 */
#ifndef SOAP_TYPE_SER__executeSql_
#define SOAP_TYPE_SER__executeSql_ (89)
/* complex XML schema type 'SER:executeSql': */
struct SOAP_CMAC SER__executeSql_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_ */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_; }
        /** Constructor with member initializations */
        SER__executeSql_() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_ * SOAP_FMAC2 soap_instantiate_SER__executeSql_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2122 */
#ifndef SOAP_TYPE_SER__executeSql_USCOREbackEncord_Response
#define SOAP_TYPE_SER__executeSql_USCOREbackEncord_Response (91)
/* complex XML schema type 'SER:executeSql_backEncord-Response': */
struct SOAP_CMAC SER__executeSql_USCOREbackEncord_Response {
      public:
        /** Required element 'executeSql_backEncordResult' of XML schema type 'xsd:string' */
        std::wstring executeSql_USCOREbackEncordResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_USCOREbackEncord_Response */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_USCOREbackEncord_Response; }
        /** Constructor with member initializations */
        SER__executeSql_USCOREbackEncord_Response() : executeSql_USCOREbackEncordResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_USCOREbackEncord_Response * SOAP_FMAC2 soap_instantiate_SER__executeSql_USCOREbackEncord_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2122 */
#ifndef SOAP_TYPE_SER__executeSql_USCOREbackEncord_
#define SOAP_TYPE_SER__executeSql_USCOREbackEncord_ (92)
/* complex XML schema type 'SER:executeSql_backEncord': */
struct SOAP_CMAC SER__executeSql_USCOREbackEncord_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_USCOREbackEncord_ */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_USCOREbackEncord_; }
        /** Constructor with member initializations */
        SER__executeSql_USCOREbackEncord_() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_USCOREbackEncord_ * SOAP_FMAC2 soap_instantiate_SER__executeSql_USCOREbackEncord_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2195 */
#ifndef SOAP_TYPE_SER__executeSql_USCOREencode_Response
#define SOAP_TYPE_SER__executeSql_USCOREencode_Response (94)
/* complex XML schema type 'SER:executeSql_encode-Response': */
struct SOAP_CMAC SER__executeSql_USCOREencode_Response {
      public:
        /** Required element 'executeSql_encodeResult' of XML schema type 'xsd:string' */
        std::wstring executeSql_USCOREencodeResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_USCOREencode_Response */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_USCOREencode_Response; }
        /** Constructor with member initializations */
        SER__executeSql_USCOREencode_Response() : executeSql_USCOREencodeResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_USCOREencode_Response * SOAP_FMAC2 soap_instantiate_SER__executeSql_USCOREencode_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2195 */
#ifndef SOAP_TYPE_SER__executeSql_USCOREencode_
#define SOAP_TYPE_SER__executeSql_USCOREencode_ (95)
/* complex XML schema type 'SER:executeSql_encode': */
struct SOAP_CMAC SER__executeSql_USCOREencode_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'sSql' of XML schema type 'xsd:string' */
        std::wstring sSql;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeSql_USCOREencode_ */
        long soap_type() const { return SOAP_TYPE_SER__executeSql_USCOREencode_; }
        /** Constructor with member initializations */
        SER__executeSql_USCOREencode_() : serverInfo(), sSql() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeSql_USCOREencode_ * SOAP_FMAC2 soap_instantiate_SER__executeSql_USCOREencode_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2271 */
#ifndef SOAP_TYPE_SER__insertXml_Response
#define SOAP_TYPE_SER__insertXml_Response (97)
/* complex XML schema type 'SER:insertXml-Response': */
struct SOAP_CMAC SER__insertXml_Response {
      public:
        /** Required element 'insertXmlResult' of XML schema type 'xsd:string' */
        std::wstring insertXmlResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__insertXml_Response */
        long soap_type() const { return SOAP_TYPE_SER__insertXml_Response; }
        /** Constructor with member initializations */
        SER__insertXml_Response() : insertXmlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__insertXml_Response * SOAP_FMAC2 soap_instantiate_SER__insertXml_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2271 */
#ifndef SOAP_TYPE_SER__insertXml_
#define SOAP_TYPE_SER__insertXml_ (98)
/* complex XML schema type 'SER:insertXml': */
struct SOAP_CMAC SER__insertXml_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'strXml' of XML schema type 'xsd:string' */
        std::wstring strXml;
        /** Required element 'encode' of XML schema type 'xsd:boolean' */
        bool encode;
      public:
        /** Return unique type id SOAP_TYPE_SER__insertXml_ */
        long soap_type() const { return SOAP_TYPE_SER__insertXml_; }
        /** Constructor with member initializations */
        SER__insertXml_() : serverInfo(), strXml(), encode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__insertXml_ * SOAP_FMAC2 soap_instantiate_SER__insertXml_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2347 */
#ifndef SOAP_TYPE_SER__executeStorageProcess_Response
#define SOAP_TYPE_SER__executeStorageProcess_Response (100)
/* complex XML schema type 'SER:executeStorageProcess-Response': */
struct SOAP_CMAC SER__executeStorageProcess_Response {
      public:
        /** Required element 'executeStorageProcessResult' of XML schema type 'xsd:string' */
        std::wstring executeStorageProcessResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeStorageProcess_Response */
        long soap_type() const { return SOAP_TYPE_SER__executeStorageProcess_Response; }
        /** Constructor with member initializations */
        SER__executeStorageProcess_Response() : executeStorageProcessResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeStorageProcess_Response * SOAP_FMAC2 soap_instantiate_SER__executeStorageProcess_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2347 */
#ifndef SOAP_TYPE_SER__executeStorageProcess_
#define SOAP_TYPE_SER__executeStorageProcess_ (101)
/* complex XML schema type 'SER:executeStorageProcess': */
struct SOAP_CMAC SER__executeStorageProcess_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'StorageProcessName' of XML schema type 'xsd:string' */
        std::wstring StorageProcessName;
        /** Required element 'Parameters' of XML schema type 'xsd:string' */
        std::wstring Parameters;
      public:
        /** Return unique type id SOAP_TYPE_SER__executeStorageProcess_ */
        long soap_type() const { return SOAP_TYPE_SER__executeStorageProcess_; }
        /** Constructor with member initializations */
        SER__executeStorageProcess_() : serverInfo(), StorageProcessName(), Parameters() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__executeStorageProcess_ * SOAP_FMAC2 soap_instantiate_SER__executeStorageProcess_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2435 */
#ifndef SOAP_TYPE_SER__AddFileToSql_Response
#define SOAP_TYPE_SER__AddFileToSql_Response (103)
/* complex XML schema type 'SER:AddFileToSql-Response': */
struct SOAP_CMAC SER__AddFileToSql_Response {
      public:
        /** Required element 'AddFileToSqlResult' of XML schema type 'xsd:string' */
        std::wstring AddFileToSqlResult;
      public:
        /** Return unique type id SOAP_TYPE_SER__AddFileToSql_Response */
        long soap_type() const { return SOAP_TYPE_SER__AddFileToSql_Response; }
        /** Constructor with member initializations */
        SER__AddFileToSql_Response() : AddFileToSqlResult() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__AddFileToSql_Response * SOAP_FMAC2 soap_instantiate_SER__AddFileToSql_Response(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2435 */
#ifndef SOAP_TYPE_SER__AddFileToSql_
#define SOAP_TYPE_SER__AddFileToSql_ (104)
/* complex XML schema type 'SER:AddFileToSql': */
struct SOAP_CMAC SER__AddFileToSql_ {
      public:
        /** Required element 'serverInfo' of XML schema type 'xsd:string' */
        std::wstring serverInfo;
        /** Required element 'strFileName' of XML schema type 'xsd:string' */
        std::wstring strFileName;
        /** Required element 'sPointer' of XML schema type 'xsd:string' */
        std::wstring sPointer;
        /** Required element 'tablenamefieldname' of XML schema type 'xsd:string' */
        std::wstring tablenamefieldname;
        /** Required element 'fileIP' of XML schema type 'xsd:string' */
        std::wstring fileIP;
        /** Required element 'fileUse' of XML schema type 'xsd:string' */
        std::wstring fileUse;
        /** Required element 'filePassword' of XML schema type 'xsd:string' */
        std::wstring filePassword;
      public:
        /** Return unique type id SOAP_TYPE_SER__AddFileToSql_ */
        long soap_type() const { return SOAP_TYPE_SER__AddFileToSql_; }
        /** Constructor with member initializations */
        SER__AddFileToSql_() : serverInfo(), strFileName(), sPointer(), tablenamefieldname(), fileIP(), fileUse(), filePassword() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SER__AddFileToSql_ * SOAP_FMAC2 soap_instantiate_SER__AddFileToSql_(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* .\web_service_allin.h:2495 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (105)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* .\web_service_allin.h:2495 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (106)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* .\web_service_allin.h:2495 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (108)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* .\web_service_allin.h:2495 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (111)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* .\web_service_allin.h:2495 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (112)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* bool has binding name 'bool' for type 'xsd:boolean' */
#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (21)
#endif

/* std::wstring has binding name 'std__wstring' for type 'xsd:string' */
#ifndef SOAP_TYPE_std__wstring
#define SOAP_TYPE_std__wstring (46)
#endif

/* MAC__GetServerInfoResponse has binding name 'MAC__GetServerInfoResponse' for type 'MAC:GetServerInfoResponse' */
#ifndef SOAP_TYPE_MAC__GetServerInfoResponse
#define SOAP_TYPE_MAC__GetServerInfoResponse (17)
#endif

/* MAC__GetServerInfo has binding name 'MAC__GetServerInfo' for type 'MAC:GetServerInfo' */
#ifndef SOAP_TYPE_MAC__GetServerInfo
#define SOAP_TYPE_MAC__GetServerInfo (16)
#endif

/* MAC__GetLineServerListResponse has binding name 'MAC__GetLineServerListResponse' for type 'MAC:GetLineServerListResponse' */
#ifndef SOAP_TYPE_MAC__GetLineServerListResponse
#define SOAP_TYPE_MAC__GetLineServerListResponse (15)
#endif

/* MAC__GetLineServerList has binding name 'MAC__GetLineServerList' for type 'MAC:GetLineServerList' */
#ifndef SOAP_TYPE_MAC__GetLineServerList
#define SOAP_TYPE_MAC__GetLineServerList (14)
#endif

/* MAC__addRobotRunStateResponse has binding name 'MAC__addRobotRunStateResponse' for type 'MAC:addRobotRunStateResponse' */
#ifndef SOAP_TYPE_MAC__addRobotRunStateResponse
#define SOAP_TYPE_MAC__addRobotRunStateResponse (13)
#endif

/* MAC__addRobotRunState has binding name 'MAC__addRobotRunState' for type 'MAC:addRobotRunState' */
#ifndef SOAP_TYPE_MAC__addRobotRunState
#define SOAP_TYPE_MAC__addRobotRunState (12)
#endif

/* MAC__GetLineServerInfoResponse has binding name 'MAC__GetLineServerInfoResponse' for type 'MAC:GetLineServerInfoResponse' */
#ifndef SOAP_TYPE_MAC__GetLineServerInfoResponse
#define SOAP_TYPE_MAC__GetLineServerInfoResponse (11)
#endif

/* MAC__GetLineServerInfo has binding name 'MAC__GetLineServerInfo' for type 'MAC:GetLineServerInfo' */
#ifndef SOAP_TYPE_MAC__GetLineServerInfo
#define SOAP_TYPE_MAC__GetLineServerInfo (10)
#endif

/* MAC__fetchRobotConfigResponse has binding name 'MAC__fetchRobotConfigResponse' for type 'MAC:fetchRobotConfigResponse' */
#ifndef SOAP_TYPE_MAC__fetchRobotConfigResponse
#define SOAP_TYPE_MAC__fetchRobotConfigResponse (9)
#endif

/* MAC__fetchRobotConfig has binding name 'MAC__fetchRobotConfig' for type 'MAC:fetchRobotConfig' */
#ifndef SOAP_TYPE_MAC__fetchRobotConfig
#define SOAP_TYPE_MAC__fetchRobotConfig (8)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (112)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (111)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (108)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (106)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (105)
#endif

/* struct SER__AddFileToSql_ has binding name 'SER__AddFileToSql_' for type 'SER:AddFileToSql' */
#ifndef SOAP_TYPE_SER__AddFileToSql_
#define SOAP_TYPE_SER__AddFileToSql_ (104)
#endif

/* struct SER__AddFileToSql_Response has binding name 'SER__AddFileToSql_Response' for type 'SER:AddFileToSql-Response' */
#ifndef SOAP_TYPE_SER__AddFileToSql_Response
#define SOAP_TYPE_SER__AddFileToSql_Response (103)
#endif

/* struct SER__executeStorageProcess_ has binding name 'SER__executeStorageProcess_' for type 'SER:executeStorageProcess' */
#ifndef SOAP_TYPE_SER__executeStorageProcess_
#define SOAP_TYPE_SER__executeStorageProcess_ (101)
#endif

/* struct SER__executeStorageProcess_Response has binding name 'SER__executeStorageProcess_Response' for type 'SER:executeStorageProcess-Response' */
#ifndef SOAP_TYPE_SER__executeStorageProcess_Response
#define SOAP_TYPE_SER__executeStorageProcess_Response (100)
#endif

/* struct SER__insertXml_ has binding name 'SER__insertXml_' for type 'SER:insertXml' */
#ifndef SOAP_TYPE_SER__insertXml_
#define SOAP_TYPE_SER__insertXml_ (98)
#endif

/* struct SER__insertXml_Response has binding name 'SER__insertXml_Response' for type 'SER:insertXml-Response' */
#ifndef SOAP_TYPE_SER__insertXml_Response
#define SOAP_TYPE_SER__insertXml_Response (97)
#endif

/* struct SER__executeSql_USCOREencode_ has binding name 'SER__executeSql_USCOREencode_' for type 'SER:executeSql_encode' */
#ifndef SOAP_TYPE_SER__executeSql_USCOREencode_
#define SOAP_TYPE_SER__executeSql_USCOREencode_ (95)
#endif

/* struct SER__executeSql_USCOREencode_Response has binding name 'SER__executeSql_USCOREencode_Response' for type 'SER:executeSql_encode-Response' */
#ifndef SOAP_TYPE_SER__executeSql_USCOREencode_Response
#define SOAP_TYPE_SER__executeSql_USCOREencode_Response (94)
#endif

/* struct SER__executeSql_USCOREbackEncord_ has binding name 'SER__executeSql_USCOREbackEncord_' for type 'SER:executeSql_backEncord' */
#ifndef SOAP_TYPE_SER__executeSql_USCOREbackEncord_
#define SOAP_TYPE_SER__executeSql_USCOREbackEncord_ (92)
#endif

/* struct SER__executeSql_USCOREbackEncord_Response has binding name 'SER__executeSql_USCOREbackEncord_Response' for type 'SER:executeSql_backEncord-Response' */
#ifndef SOAP_TYPE_SER__executeSql_USCOREbackEncord_Response
#define SOAP_TYPE_SER__executeSql_USCOREbackEncord_Response (91)
#endif

/* struct SER__executeSql_ has binding name 'SER__executeSql_' for type 'SER:executeSql' */
#ifndef SOAP_TYPE_SER__executeSql_
#define SOAP_TYPE_SER__executeSql_ (89)
#endif

/* struct SER__executeSql_Response has binding name 'SER__executeSql_Response' for type 'SER:executeSql-Response' */
#ifndef SOAP_TYPE_SER__executeSql_Response
#define SOAP_TYPE_SER__executeSql_Response (88)
#endif

/* struct SER__TestLinkSqlserver_ has binding name 'SER__TestLinkSqlserver_' for type 'SER:TestLinkSqlserver' */
#ifndef SOAP_TYPE_SER__TestLinkSqlserver_
#define SOAP_TYPE_SER__TestLinkSqlserver_ (86)
#endif

/* struct SER__TestLinkSqlserver_Response has binding name 'SER__TestLinkSqlserver_Response' for type 'SER:TestLinkSqlserver-Response' */
#ifndef SOAP_TYPE_SER__TestLinkSqlserver_Response
#define SOAP_TYPE_SER__TestLinkSqlserver_Response (85)
#endif

/* struct SER__showExistLink_ has binding name 'SER__showExistLink_' for type 'SER:showExistLink' */
#ifndef SOAP_TYPE_SER__showExistLink_
#define SOAP_TYPE_SER__showExistLink_ (83)
#endif

/* struct SER__showExistLink_Response has binding name 'SER__showExistLink_Response' for type 'SER:showExistLink-Response' */
#ifndef SOAP_TYPE_SER__showExistLink_Response
#define SOAP_TYPE_SER__showExistLink_Response (82)
#endif

/* struct SER__clearLink_ has binding name 'SER__clearLink_' for type 'SER:clearLink' */
#ifndef SOAP_TYPE_SER__clearLink_
#define SOAP_TYPE_SER__clearLink_ (80)
#endif

/* struct SER__clearLink_Response has binding name 'SER__clearLink_Response' for type 'SER:clearLink-Response' */
#ifndef SOAP_TYPE_SER__clearLink_Response
#define SOAP_TYPE_SER__clearLink_Response (79)
#endif

/* struct SER__AddNumbers_ has binding name 'SER__AddNumbers_' for type 'SER:AddNumbers' */
#ifndef SOAP_TYPE_SER__AddNumbers_
#define SOAP_TYPE_SER__AddNumbers_ (77)
#endif

/* struct SER__AddNumbers_Response has binding name 'SER__AddNumbers_Response' for type 'SER:AddNumbers-Response' */
#ifndef SOAP_TYPE_SER__AddNumbers_Response
#define SOAP_TYPE_SER__AddNumbers_Response (76)
#endif

/* struct SER__AddFileToSql has binding name 'SER__AddFileToSql' for type 'SER:AddFileToSql' */
#ifndef SOAP_TYPE_SER__AddFileToSql
#define SOAP_TYPE_SER__AddFileToSql (74)
#endif

/* struct SER__AddFileToSqlResponse has binding name 'SER__AddFileToSqlResponse' for type 'SER:AddFileToSqlResponse' */
#ifndef SOAP_TYPE_SER__AddFileToSqlResponse
#define SOAP_TYPE_SER__AddFileToSqlResponse (73)
#endif

/* struct SER__executeStorageProcess has binding name 'SER__executeStorageProcess' for type 'SER:executeStorageProcess' */
#ifndef SOAP_TYPE_SER__executeStorageProcess
#define SOAP_TYPE_SER__executeStorageProcess (71)
#endif

/* struct SER__executeStorageProcessResponse has binding name 'SER__executeStorageProcessResponse' for type 'SER:executeStorageProcessResponse' */
#ifndef SOAP_TYPE_SER__executeStorageProcessResponse
#define SOAP_TYPE_SER__executeStorageProcessResponse (70)
#endif

/* struct SER__insertXml has binding name 'SER__insertXml' for type 'SER:insertXml' */
#ifndef SOAP_TYPE_SER__insertXml
#define SOAP_TYPE_SER__insertXml (68)
#endif

/* struct SER__insertXmlResponse has binding name 'SER__insertXmlResponse' for type 'SER:insertXmlResponse' */
#ifndef SOAP_TYPE_SER__insertXmlResponse
#define SOAP_TYPE_SER__insertXmlResponse (67)
#endif

/* struct SER__executeSql_USCOREencode has binding name 'SER__executeSql_USCOREencode' for type 'SER:executeSql_encode' */
#ifndef SOAP_TYPE_SER__executeSql_USCOREencode
#define SOAP_TYPE_SER__executeSql_USCOREencode (65)
#endif

/* struct SER__executeSql_USCOREencodeResponse has binding name 'SER__executeSql_USCOREencodeResponse' for type 'SER:executeSql_encodeResponse' */
#ifndef SOAP_TYPE_SER__executeSql_USCOREencodeResponse
#define SOAP_TYPE_SER__executeSql_USCOREencodeResponse (64)
#endif

/* struct SER__executeSql_USCOREbackEncord has binding name 'SER__executeSql_USCOREbackEncord' for type 'SER:executeSql_backEncord' */
#ifndef SOAP_TYPE_SER__executeSql_USCOREbackEncord
#define SOAP_TYPE_SER__executeSql_USCOREbackEncord (62)
#endif

/* struct SER__executeSql_USCOREbackEncordResponse has binding name 'SER__executeSql_USCOREbackEncordResponse' for type 'SER:executeSql_backEncordResponse' */
#ifndef SOAP_TYPE_SER__executeSql_USCOREbackEncordResponse
#define SOAP_TYPE_SER__executeSql_USCOREbackEncordResponse (61)
#endif

/* struct SER__executeSql has binding name 'SER__executeSql' for type 'SER:executeSql' */
#ifndef SOAP_TYPE_SER__executeSql
#define SOAP_TYPE_SER__executeSql (59)
#endif

/* struct SER__executeSqlResponse has binding name 'SER__executeSqlResponse' for type 'SER:executeSqlResponse' */
#ifndef SOAP_TYPE_SER__executeSqlResponse
#define SOAP_TYPE_SER__executeSqlResponse (58)
#endif

/* struct SER__TestLinkSqlserver has binding name 'SER__TestLinkSqlserver' for type 'SER:TestLinkSqlserver' */
#ifndef SOAP_TYPE_SER__TestLinkSqlserver
#define SOAP_TYPE_SER__TestLinkSqlserver (56)
#endif

/* struct SER__TestLinkSqlserverResponse has binding name 'SER__TestLinkSqlserverResponse' for type 'SER:TestLinkSqlserverResponse' */
#ifndef SOAP_TYPE_SER__TestLinkSqlserverResponse
#define SOAP_TYPE_SER__TestLinkSqlserverResponse (55)
#endif

/* struct SER__showExistLink has binding name 'SER__showExistLink' for type 'SER:showExistLink' */
#ifndef SOAP_TYPE_SER__showExistLink
#define SOAP_TYPE_SER__showExistLink (53)
#endif

/* struct SER__showExistLinkResponse has binding name 'SER__showExistLinkResponse' for type 'SER:showExistLinkResponse' */
#ifndef SOAP_TYPE_SER__showExistLinkResponse
#define SOAP_TYPE_SER__showExistLinkResponse (52)
#endif

/* struct SER__clearLink has binding name 'SER__clearLink' for type 'SER:clearLink' */
#ifndef SOAP_TYPE_SER__clearLink
#define SOAP_TYPE_SER__clearLink (50)
#endif

/* struct SER__clearLinkResponse has binding name 'SER__clearLinkResponse' for type 'SER:clearLinkResponse' */
#ifndef SOAP_TYPE_SER__clearLinkResponse
#define SOAP_TYPE_SER__clearLinkResponse (49)
#endif

/* struct SER__AddNumbers has binding name 'SER__AddNumbers' for type 'SER:AddNumbers' */
#ifndef SOAP_TYPE_SER__AddNumbers
#define SOAP_TYPE_SER__AddNumbers (45)
#endif

/* struct SER__AddNumbersResponse has binding name 'SER__AddNumbersResponse' for type 'SER:AddNumbersResponse' */
#ifndef SOAP_TYPE_SER__AddNumbersResponse
#define SOAP_TYPE_SER__AddNumbersResponse (44)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (114)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (113)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (107)
#endif

/* MAC__GetServerInfo * has binding name 'PointerToMAC__GetServerInfo' for type 'MAC:GetServerInfo' */
#ifndef SOAP_TYPE_PointerToMAC__GetServerInfo
#define SOAP_TYPE_PointerToMAC__GetServerInfo (38)
#endif

/* MAC__GetLineServerList * has binding name 'PointerToMAC__GetLineServerList' for type 'MAC:GetLineServerList' */
#ifndef SOAP_TYPE_PointerToMAC__GetLineServerList
#define SOAP_TYPE_PointerToMAC__GetLineServerList (34)
#endif

/* MAC__addRobotRunState * has binding name 'PointerToMAC__addRobotRunState' for type 'MAC:addRobotRunState' */
#ifndef SOAP_TYPE_PointerToMAC__addRobotRunState
#define SOAP_TYPE_PointerToMAC__addRobotRunState (30)
#endif

/* MAC__GetLineServerInfo * has binding name 'PointerToMAC__GetLineServerInfo' for type 'MAC:GetLineServerInfo' */
#ifndef SOAP_TYPE_PointerToMAC__GetLineServerInfo
#define SOAP_TYPE_PointerToMAC__GetLineServerInfo (26)
#endif

/* MAC__fetchRobotConfig * has binding name 'PointerToMAC__fetchRobotConfig' for type 'MAC:fetchRobotConfig' */
#ifndef SOAP_TYPE_PointerToMAC__fetchRobotConfig
#define SOAP_TYPE_PointerToMAC__fetchRobotConfig (22)
#endif

/* wchar_t * has binding name 'wstring' for type 'xsd:string' */
#ifndef SOAP_TYPE_wstring
#define SOAP_TYPE_wstring (19)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    
    /** Web service synchronous operation 'soap_call___MAC__fetchRobotConfig' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___MAC__fetchRobotConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__fetchRobotConfig *MAC__fetchRobotConfig_, MAC__fetchRobotConfigResponse &MAC__fetchRobotConfigResponse_);
    /** Web service asynchronous operation 'soap_send___MAC__fetchRobotConfig' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send___MAC__fetchRobotConfig(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__fetchRobotConfig *MAC__fetchRobotConfig_);
    /** Web service asynchronous operation 'soap_recv___MAC__fetchRobotConfig' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv___MAC__fetchRobotConfig(struct soap *soap, MAC__fetchRobotConfigResponse &MAC__fetchRobotConfigResponse_);
    
    /** Web service synchronous operation 'soap_call___MAC__GetLineServerInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___MAC__GetLineServerInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__GetLineServerInfo *MAC__GetLineServerInfo_, MAC__GetLineServerInfoResponse &MAC__GetLineServerInfoResponse_);
    /** Web service asynchronous operation 'soap_send___MAC__GetLineServerInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send___MAC__GetLineServerInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__GetLineServerInfo *MAC__GetLineServerInfo_);
    /** Web service asynchronous operation 'soap_recv___MAC__GetLineServerInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv___MAC__GetLineServerInfo(struct soap *soap, MAC__GetLineServerInfoResponse &MAC__GetLineServerInfoResponse_);
    
    /** Web service synchronous operation 'soap_call___MAC__addRobotRunState' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___MAC__addRobotRunState(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__addRobotRunState *MAC__addRobotRunState_, MAC__addRobotRunStateResponse &MAC__addRobotRunStateResponse_);
    /** Web service asynchronous operation 'soap_send___MAC__addRobotRunState' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send___MAC__addRobotRunState(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__addRobotRunState *MAC__addRobotRunState_);
    /** Web service asynchronous operation 'soap_recv___MAC__addRobotRunState' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv___MAC__addRobotRunState(struct soap *soap, MAC__addRobotRunStateResponse &MAC__addRobotRunStateResponse_);
    
    /** Web service synchronous operation 'soap_call___MAC__GetLineServerList' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___MAC__GetLineServerList(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__GetLineServerList *MAC__GetLineServerList_, MAC__GetLineServerListResponse &MAC__GetLineServerListResponse_);
    /** Web service asynchronous operation 'soap_send___MAC__GetLineServerList' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send___MAC__GetLineServerList(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__GetLineServerList *MAC__GetLineServerList_);
    /** Web service asynchronous operation 'soap_recv___MAC__GetLineServerList' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv___MAC__GetLineServerList(struct soap *soap, MAC__GetLineServerListResponse &MAC__GetLineServerListResponse_);
    
    /** Web service synchronous operation 'soap_call___MAC__GetServerInfo' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call___MAC__GetServerInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__GetServerInfo *MAC__GetServerInfo_, MAC__GetServerInfoResponse &MAC__GetServerInfoResponse_);
    /** Web service asynchronous operation 'soap_send___MAC__GetServerInfo' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send___MAC__GetServerInfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, MAC__GetServerInfo *MAC__GetServerInfo_);
    /** Web service asynchronous operation 'soap_recv___MAC__GetServerInfo' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv___MAC__GetServerInfo(struct soap *soap, MAC__GetServerInfoResponse &MAC__GetServerInfoResponse_);
    
    /** Web service synchronous operation 'soap_call_SER__AddNumbers' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__AddNumbers(struct soap *soap, const char *soap_endpoint, const char *soap_action, int NumberOne, int NumberTwo, int &AddNumbersResult);
    /** Web service asynchronous operation 'soap_send_SER__AddNumbers' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__AddNumbers(struct soap *soap, const char *soap_endpoint, const char *soap_action, int NumberOne, int NumberTwo);
    /** Web service asynchronous operation 'soap_recv_SER__AddNumbers' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__AddNumbers(struct soap *soap, int &AddNumbersResult);
    
    /** Web service synchronous operation 'soap_call_SER__clearLink' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__clearLink(struct soap *soap, const char *soap_endpoint, const char *soap_action, bool bTimeContrl, std::wstring &clearLinkResult);
    /** Web service asynchronous operation 'soap_send_SER__clearLink' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__clearLink(struct soap *soap, const char *soap_endpoint, const char *soap_action, bool bTimeContrl);
    /** Web service asynchronous operation 'soap_recv_SER__clearLink' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__clearLink(struct soap *soap, std::wstring &clearLinkResult);
    
    /** Web service synchronous operation 'soap_call_SER__showExistLink' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__showExistLink(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::wstring &showExistLinkResult);
    /** Web service asynchronous operation 'soap_send_SER__showExistLink' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__showExistLink(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_SER__showExistLink' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__showExistLink(struct soap *soap, std::wstring &showExistLinkResult);
    
    /** Web service synchronous operation 'soap_call_SER__TestLinkSqlserver' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__TestLinkSqlserver(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, std::wstring &TestLinkSqlserverResult);
    /** Web service asynchronous operation 'soap_send_SER__TestLinkSqlserver' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__TestLinkSqlserver(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo);
    /** Web service asynchronous operation 'soap_recv_SER__TestLinkSqlserver' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__TestLinkSqlserver(struct soap *soap, std::wstring &TestLinkSqlserverResult);
    
    /** Web service synchronous operation 'soap_call_SER__executeSql' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__executeSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSqlResult);
    /** Web service asynchronous operation 'soap_send_SER__executeSql' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__executeSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_SER__executeSql' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__executeSql(struct soap *soap, std::wstring &executeSqlResult);
    
    /** Web service synchronous operation 'soap_call_SER__executeSql_USCOREbackEncord' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__executeSql_USCOREbackEncord(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSql_USCOREbackEncordResult);
    /** Web service asynchronous operation 'soap_send_SER__executeSql_USCOREbackEncord' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__executeSql_USCOREbackEncord(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_SER__executeSql_USCOREbackEncord' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__executeSql_USCOREbackEncord(struct soap *soap, std::wstring &executeSql_USCOREbackEncordResult);
    
    /** Web service synchronous operation 'soap_call_SER__executeSql_USCOREencode' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__executeSql_USCOREencode(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSql_USCOREencodeResult);
    /** Web service asynchronous operation 'soap_send_SER__executeSql_USCOREencode' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__executeSql_USCOREencode(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_SER__executeSql_USCOREencode' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__executeSql_USCOREencode(struct soap *soap, std::wstring &executeSql_USCOREencodeResult);
    
    /** Web service synchronous operation 'soap_call_SER__insertXml' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__insertXml(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strXml, bool encode, std::wstring &insertXmlResult);
    /** Web service asynchronous operation 'soap_send_SER__insertXml' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__insertXml(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strXml, bool encode);
    /** Web service asynchronous operation 'soap_recv_SER__insertXml' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__insertXml(struct soap *soap, std::wstring &insertXmlResult);
    
    /** Web service synchronous operation 'soap_call_SER__executeStorageProcess' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__executeStorageProcess(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& StorageProcessName, const std::wstring& Parameters, std::wstring &executeStorageProcessResult);
    /** Web service asynchronous operation 'soap_send_SER__executeStorageProcess' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__executeStorageProcess(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& StorageProcessName, const std::wstring& Parameters);
    /** Web service asynchronous operation 'soap_recv_SER__executeStorageProcess' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__executeStorageProcess(struct soap *soap, std::wstring &executeStorageProcessResult);
    
    /** Web service synchronous operation 'soap_call_SER__AddFileToSql' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__AddFileToSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strFileName, const std::wstring& sPointer, const std::wstring& tablenamefieldname, const std::wstring& fileIP, const std::wstring& fileUse, const std::wstring& filePassword, std::wstring &AddFileToSqlResult);
    /** Web service asynchronous operation 'soap_send_SER__AddFileToSql' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__AddFileToSql(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strFileName, const std::wstring& sPointer, const std::wstring& tablenamefieldname, const std::wstring& fileIP, const std::wstring& fileUse, const std::wstring& filePassword);
    /** Web service asynchronous operation 'soap_recv_SER__AddFileToSql' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__AddFileToSql(struct soap *soap, std::wstring &AddFileToSqlResult);
    
    /** Web service synchronous operation 'soap_call_SER__AddNumbers_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__AddNumbers_(struct soap *soap, const char *soap_endpoint, const char *soap_action, int NumberOne, int NumberTwo, int &AddNumbersResult);
    /** Web service asynchronous operation 'soap_send_SER__AddNumbers_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__AddNumbers_(struct soap *soap, const char *soap_endpoint, const char *soap_action, int NumberOne, int NumberTwo);
    /** Web service asynchronous operation 'soap_recv_SER__AddNumbers_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__AddNumbers_(struct soap *soap, int &AddNumbersResult);
    
    /** Web service synchronous operation 'soap_call_SER__clearLink_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__clearLink_(struct soap *soap, const char *soap_endpoint, const char *soap_action, bool bTimeContrl, std::wstring &clearLinkResult);
    /** Web service asynchronous operation 'soap_send_SER__clearLink_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__clearLink_(struct soap *soap, const char *soap_endpoint, const char *soap_action, bool bTimeContrl);
    /** Web service asynchronous operation 'soap_recv_SER__clearLink_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__clearLink_(struct soap *soap, std::wstring &clearLinkResult);
    
    /** Web service synchronous operation 'soap_call_SER__showExistLink_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__showExistLink_(struct soap *soap, const char *soap_endpoint, const char *soap_action, std::wstring &showExistLinkResult);
    /** Web service asynchronous operation 'soap_send_SER__showExistLink_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__showExistLink_(struct soap *soap, const char *soap_endpoint, const char *soap_action);
    /** Web service asynchronous operation 'soap_recv_SER__showExistLink_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__showExistLink_(struct soap *soap, std::wstring &showExistLinkResult);
    
    /** Web service synchronous operation 'soap_call_SER__TestLinkSqlserver_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__TestLinkSqlserver_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, std::wstring &TestLinkSqlserverResult);
    /** Web service asynchronous operation 'soap_send_SER__TestLinkSqlserver_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__TestLinkSqlserver_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo);
    /** Web service asynchronous operation 'soap_recv_SER__TestLinkSqlserver_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__TestLinkSqlserver_(struct soap *soap, std::wstring &TestLinkSqlserverResult);
    
    /** Web service synchronous operation 'soap_call_SER__executeSql_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__executeSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSqlResult);
    /** Web service asynchronous operation 'soap_send_SER__executeSql_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__executeSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_SER__executeSql_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__executeSql_(struct soap *soap, std::wstring &executeSqlResult);
    
    /** Web service synchronous operation 'soap_call_SER__executeSql_USCOREbackEncord_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__executeSql_USCOREbackEncord_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSql_USCOREbackEncordResult);
    /** Web service asynchronous operation 'soap_send_SER__executeSql_USCOREbackEncord_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__executeSql_USCOREbackEncord_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_SER__executeSql_USCOREbackEncord_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__executeSql_USCOREbackEncord_(struct soap *soap, std::wstring &executeSql_USCOREbackEncordResult);
    
    /** Web service synchronous operation 'soap_call_SER__executeSql_USCOREencode_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__executeSql_USCOREencode_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql, std::wstring &executeSql_USCOREencodeResult);
    /** Web service asynchronous operation 'soap_send_SER__executeSql_USCOREencode_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__executeSql_USCOREencode_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& sSql);
    /** Web service asynchronous operation 'soap_recv_SER__executeSql_USCOREencode_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__executeSql_USCOREencode_(struct soap *soap, std::wstring &executeSql_USCOREencodeResult);
    
    /** Web service synchronous operation 'soap_call_SER__insertXml_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__insertXml_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strXml, bool encode, std::wstring &insertXmlResult);
    /** Web service asynchronous operation 'soap_send_SER__insertXml_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__insertXml_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strXml, bool encode);
    /** Web service asynchronous operation 'soap_recv_SER__insertXml_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__insertXml_(struct soap *soap, std::wstring &insertXmlResult);
    
    /** Web service synchronous operation 'soap_call_SER__executeStorageProcess_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__executeStorageProcess_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& StorageProcessName, const std::wstring& Parameters, std::wstring &executeStorageProcessResult);
    /** Web service asynchronous operation 'soap_send_SER__executeStorageProcess_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__executeStorageProcess_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& StorageProcessName, const std::wstring& Parameters);
    /** Web service asynchronous operation 'soap_recv_SER__executeStorageProcess_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__executeStorageProcess_(struct soap *soap, std::wstring &executeStorageProcessResult);
    
    /** Web service synchronous operation 'soap_call_SER__AddFileToSql_' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_SER__AddFileToSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strFileName, const std::wstring& sPointer, const std::wstring& tablenamefieldname, const std::wstring& fileIP, const std::wstring& fileUse, const std::wstring& filePassword, std::wstring &AddFileToSqlResult);
    /** Web service asynchronous operation 'soap_send_SER__AddFileToSql_' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_SER__AddFileToSql_(struct soap *soap, const char *soap_endpoint, const char *soap_action, const std::wstring& serverInfo, const std::wstring& strFileName, const std::wstring& sPointer, const std::wstring& tablenamefieldname, const std::wstring& fileIP, const std::wstring& fileUse, const std::wstring& filePassword);
    /** Web service asynchronous operation 'soap_recv_SER__AddFileToSql_' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_SER__AddFileToSql_(struct soap *soap, std::wstring &AddFileToSqlResult);

#endif

/* End of soapStub.h */
